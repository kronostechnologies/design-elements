// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search Contextual Matches the snapshot when disabled 1`] = `
.c2 {
  color: #000000;
  display: block;
  font-size: 0.75rem;
  font-weight: var(--font-normal);
  -webkit-letter-spacing: 0.02rem;
  -moz-letter-spacing: 0.02rem;
  -ms-letter-spacing: 0.02rem;
  letter-spacing: 0.02rem;
  line-height: 1.25rem;
  margin: 0;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}

input + .c2 {
  margin-left: var(--spacing-half);
}

.c4 {
  border: 0 !important;
  -webkit-clip: rect(1px,1px,1px,1px);
  clip: rect(1px,1px,1px,1px);
  height: 1px !important;
  overflow: hidden;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 label {
  bottom: 0.5rem;
  color: #57666E;
  display: inline-block;
  height: 1rem;
  left: 0.5rem;
  margin: auto;
  position: absolute;
  top: 0.5rem;
  width: 1rem;
}

.c1 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  position: relative;
}

.c3 {
  color: #9CA7B4;
  height: 1rem;
  width: 1rem;
}

.c7 {
  color: #57666E;
  height: 1.25rem;
  width: 1.25rem;
}

.c5 {
  background: #FFFFFF;
  border: 1px solid #D9DDE2;
  border-radius: var(--border-radius);
  box-shadow: none;
  box-sizing: border-box;
  color: #000000;
  font-family: inherit;
  font-size: 0.875rem;
  -webkit-letter-spacing: 0.025rem;
  -moz-letter-spacing: 0.025rem;
  -ms-letter-spacing: 0.025rem;
  letter-spacing: 0.025rem;
  line-height: 1.4rem;
  margin: 0;
  outline: none;
  padding: var(--spacing-half) var(--spacing-1x);
  width: 100%;
  border-radius: undefined;
  padding: var(--spacing-half) 1.75rem var(--spacing-half) var(--spacing-4x);
}

.c5::-webkit-input-placeholder {
  color: #57666E;
}

.c5::-moz-placeholder {
  color: #57666E;
}

.c5:-ms-input-placeholder {
  color: #57666E;
}

.c5::placeholder {
  color: #57666E;
}

.c5:disabled {
  background-color: #F1F2F2;
  border-color: #D9DDE2;
}

.c5:disabled,
.c5:disabled::-webkit-input-placeholder {
  color: #9CA7B4;
}

.c5:disabled,
.c5:disabled::-moz-placeholder {
  color: #9CA7B4;
}

.c5:disabled,
.c5:disabled:-ms-input-placeholder {
  color: #9CA7B4;
}

.c5:disabled,
.c5:disabled::placeholder {
  color: #9CA7B4;
}

.c5:focus {
  border-color: #0080A5;
  box-shadow: 0 0 0 2px rgba(0,128,165,0.4);
}

label + .c5 {
  display: block;
  margin-top: var(--spacing-half);
}

label + .c5 {
  margin-top: 0;
}

.c5::-webkit-search-decoration,
.c5::-webkit-search-cancel-button,
.c5::-webkit-search-results-button,
.c5::-webkit-search-results-decoration {
  display: none;
}

.c6 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  border: 0;
  bottom: 0.5rem;
  cursor: pointer;
  display: none;
  height: 1.25rem;
  margin: auto;
  padding: 0;
  position: absolute;
  right: 0.25rem;
  top: 0.5rem;
  width: 1.25rem;
}

input:valid + .c6 {
  display: inline-block;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <label
      className="c2"
    >
      <svg
        className="c3"
        disabled={true}
      />
      <span
        aria-hidden="false"
        className="c4"
      >
        Search
      </span>
    </label>
    <input
      autoComplete="on"
      className="c5"
      disabled={true}
      onChange={[Function]}
      onKeyDown={[Function]}
      type="search"
      value=""
    />
    <button
      className="c6"
      data-testid="resetButton"
      onClick={[Function]}
    >
      <svg
        className="c7"
      />
      <span
        aria-hidden="false"
        className="c4"
      >
        Reset
      </span>
    </button>
  </div>
</div>
`;

exports[`Search Contextual Matches the snapshot when enabled 1`] = `
.c2 {
  color: #000000;
  display: block;
  font-size: 0.75rem;
  font-weight: var(--font-normal);
  -webkit-letter-spacing: 0.02rem;
  -moz-letter-spacing: 0.02rem;
  -ms-letter-spacing: 0.02rem;
  letter-spacing: 0.02rem;
  line-height: 1.25rem;
  margin: 0;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}

input + .c2 {
  margin-left: var(--spacing-half);
}

.c4 {
  border: 0 !important;
  -webkit-clip: rect(1px,1px,1px,1px);
  clip: rect(1px,1px,1px,1px);
  height: 1px !important;
  overflow: hidden;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 label {
  bottom: 0.5rem;
  color: #57666E;
  display: inline-block;
  height: 1rem;
  left: 0.5rem;
  margin: auto;
  position: absolute;
  top: 0.5rem;
  width: 1rem;
}

.c1 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  position: relative;
}

.c3 {
  color: #57666E;
  height: 1rem;
  width: 1rem;
}

.c7 {
  color: #57666E;
  height: 1.25rem;
  width: 1.25rem;
}

.c5 {
  background: #FFFFFF;
  border: 1px solid #D9DDE2;
  border-radius: var(--border-radius);
  box-shadow: none;
  box-sizing: border-box;
  color: #000000;
  font-family: inherit;
  font-size: 0.875rem;
  -webkit-letter-spacing: 0.025rem;
  -moz-letter-spacing: 0.025rem;
  -ms-letter-spacing: 0.025rem;
  letter-spacing: 0.025rem;
  line-height: 1.4rem;
  margin: 0;
  outline: none;
  padding: var(--spacing-half) var(--spacing-1x);
  width: 100%;
  border-radius: undefined;
  padding: var(--spacing-half) 1.75rem var(--spacing-half) var(--spacing-4x);
}

.c5::-webkit-input-placeholder {
  color: #57666E;
}

.c5::-moz-placeholder {
  color: #57666E;
}

.c5:-ms-input-placeholder {
  color: #57666E;
}

.c5::placeholder {
  color: #57666E;
}

.c5:disabled {
  background-color: #F1F2F2;
  border-color: #D9DDE2;
}

.c5:disabled,
.c5:disabled::-webkit-input-placeholder {
  color: #9CA7B4;
}

.c5:disabled,
.c5:disabled::-moz-placeholder {
  color: #9CA7B4;
}

.c5:disabled,
.c5:disabled:-ms-input-placeholder {
  color: #9CA7B4;
}

.c5:disabled,
.c5:disabled::placeholder {
  color: #9CA7B4;
}

.c5:focus {
  border-color: #0080A5;
  box-shadow: 0 0 0 2px rgba(0,128,165,0.4);
}

label + .c5 {
  display: block;
  margin-top: var(--spacing-half);
}

label + .c5 {
  margin-top: 0;
}

.c5::-webkit-search-decoration,
.c5::-webkit-search-cancel-button,
.c5::-webkit-search-results-button,
.c5::-webkit-search-results-decoration {
  display: none;
}

.c6 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  border: 0;
  bottom: 0.5rem;
  cursor: pointer;
  display: none;
  height: 1.25rem;
  margin: auto;
  padding: 0;
  position: absolute;
  right: 0.25rem;
  top: 0.5rem;
  width: 1.25rem;
}

input:valid + .c6 {
  display: inline-block;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <label
      className="c2"
    >
      <svg
        className="c3"
      />
      <span
        aria-hidden="false"
        className="c4"
      >
        Search
      </span>
    </label>
    <input
      autoComplete="on"
      className="c5"
      onChange={[Function]}
      onKeyDown={[Function]}
      type="search"
      value=""
    />
    <button
      className="c6"
      data-testid="resetButton"
      onClick={[Function]}
    >
      <svg
        className="c7"
      />
      <span
        aria-hidden="false"
        className="c4"
      >
        Reset
      </span>
    </button>
  </div>
</div>
`;
