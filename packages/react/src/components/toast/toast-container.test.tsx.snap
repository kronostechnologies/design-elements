// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ToastContainer should match snapshot (alert) 1`] = `
.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: inherit;
  border: 1px solid;
  border-radius: 1.5rem;
  box-sizing: border-box;
  color: inherit;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-family: inherit;
  font-size: 0.75rem;
  font-weight: var(--font-bold);
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-letter-spacing: 0.025rem;
  -moz-letter-spacing: 0.025rem;
  -ms-letter-spacing: 0.025rem;
  letter-spacing: 0.025rem;
  line-height: 1rem;
  min-height: var(--size-2x);
  min-width: 2rem;
  outline: none;
  padding: 0 var(--spacing-2x);
  text-transform: uppercase;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c5 {
  outline: 2px solid transparent;
  outline-offset: -2px;
}

.c5:focus {
  box-shadow: 0 0 0 2px #006296;
  outline: 2px solid #84C6EA;
  outline-offset: -2px;
}

.c5 > svg {
  height: var(--size-1x);
  width: var(--size-1x);
}

.c4 {
  background-color: transparent;
  border-color: transparent;
  color: #FFFFFF;
  padding: 0;
  width: var(--size-2x);
}

.c4 {
  outline: 2px solid transparent;
  outline-offset: -2px;
}

.c4:focus {
  box-shadow: 0 0 0 2px #84C6EA;
  outline: 2px solid #006296;
  outline-offset: -2px;
}

.c4:hover,
.c4[aria-expanded='true'] {
  background-color: rgb(0 0 0 / 0.5);
  border-color: transparent;
  color: #FFFFFF;
}

.c4[aria-disabled='true'] {
  background-color: transparent;
  border-color: transparent;
  color: #006296;
  cursor: not-allowed;
}

.c4 > svg {
  height: var(--size-1x);
  width: var(--size-1x);
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: var(--border-radius);
  box-shadow: 0 16px 32px 0 rgb(0 0 0 / 5%);
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: var(--spacing-2x);
  -webkit-transition: 0.3s ease;
  transition: 0.3s ease;
  width: 400px;
  -webkit-animation: dlEaXy 0.25s ease-out;
  animation: dlEaXy 0.25s ease-out;
  background: #CD2C23;
  color: #FFFFFF;
}

.c2 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  font-size: 1rem;
  line-height: 1.5rem;
  margin: 0 var(--spacing-1halfx);
}

.c3 {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  color: #FFFFFF;
  margin: calc(-1 * var(--spacing-half)) calc(-1 * var(--spacing-half)) calc(-1 * var(--spacing-half)) 0;
}

.c1 {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  height: var(--size-1x);
  margin-top: 0.25rem;
  width: var(--size-1x);
}

<ToastContainer
  id="an id"
  message="a message"
  position="bottom-right"
  type="alert"
>
  <styled.div
    isMobile={false}
    position="bottom-right"
    role="status"
    type="alert"
  >
    <div
      className="c0"
      role="status"
      type="alert"
    >
      <Styled(Icon)
        isMobile={false}
        name="alertOctagon"
        role="img"
        size="16"
        type="alert"
      >
        <Icon
          aria-label="alert"
          className="c1"
          focusable={true}
          isMobile={false}
          name="alertOctagon"
          role="img"
          size="16"
          type="alert"
        >
          <svg
            aria-label="alert"
            className="c1"
            color="currentColor"
            focusable={true}
            height="16"
            isMobile={false}
            role="img"
            type="alert"
            width="16"
          />
        </Icon>
      </Styled(Icon)>
      <styled.p
        $isMobile={false}
      >
        <p
          className="c2"
        >
          a message
        </p>
      </styled.p>
      <Styled(IconButton)
        $isMobile={false}
        $type="alert"
        buttonType="tertiary"
        data-testid="dismiss"
        inverted={true}
        label="Dismiss notification"
        onClick={[Function]}
        type="button"
      >
        <IconButton
          buttonType="tertiary"
          className="c3"
          data-testid="dismiss"
          iconName="x"
          inverted={true}
          label="Dismiss notification"
          onClick={[Function]}
          type="button"
        >
          <Styled(AbstractButton)
            aria-label="Dismiss notification"
            buttonType="tertiary"
            className="c3"
            data-testid="dismiss"
            focusable={true}
            inverted={true}
            isMobile={false}
            onClick={[Function]}
            size="medium"
            type="button"
          >
            <AbstractButton
              aria-label="Dismiss notification"
              buttonType="tertiary"
              className="c4 c3"
              data-testid="dismiss"
              focusable={true}
              inverted={true}
              isMobile={false}
              onClick={[Function]}
              size="medium"
              type="button"
            >
              <styled.button
                $focusable={true}
                aria-label="Dismiss notification"
                buttonType="tertiary"
                className="c4 c3"
                data-testid="dismiss"
                inverted={true}
                isMobile={false}
                onClick={[Function]}
                size="medium"
                type="button"
              >
                <button
                  aria-label="Dismiss notification"
                  className="c5 c4 c3"
                  data-testid="dismiss"
                  onClick={[Function]}
                  size="medium"
                  type="button"
                >
                  <Icon
                    aria-hidden="true"
                    name="x"
                    size="16"
                  >
                    <svg
                      aria-hidden="true"
                      color="currentColor"
                      focusable={false}
                      height="16"
                      width="16"
                    />
                  </Icon>
                </button>
              </styled.button>
            </AbstractButton>
          </Styled(AbstractButton)>
        </IconButton>
      </Styled(IconButton)>
    </div>
  </styled.div>
</ToastContainer>
`;

exports[`ToastContainer should match snapshot (discovery) 1`] = `
.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: inherit;
  border: 1px solid;
  border-radius: 1.5rem;
  box-sizing: border-box;
  color: inherit;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-family: inherit;
  font-size: 0.75rem;
  font-weight: var(--font-bold);
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-letter-spacing: 0.025rem;
  -moz-letter-spacing: 0.025rem;
  -ms-letter-spacing: 0.025rem;
  letter-spacing: 0.025rem;
  line-height: 1rem;
  min-height: var(--size-2x);
  min-width: 2rem;
  outline: none;
  padding: 0 var(--spacing-2x);
  text-transform: uppercase;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c5 {
  outline: 2px solid transparent;
  outline-offset: -2px;
}

.c5:focus {
  box-shadow: 0 0 0 2px #006296;
  outline: 2px solid #84C6EA;
  outline-offset: -2px;
}

.c5 > svg {
  height: var(--size-1x);
  width: var(--size-1x);
}

.c4 {
  background-color: transparent;
  border-color: transparent;
  color: #FFFFFF;
  padding: 0;
  width: var(--size-2x);
}

.c4 {
  outline: 2px solid transparent;
  outline-offset: -2px;
}

.c4:focus {
  box-shadow: 0 0 0 2px #84C6EA;
  outline: 2px solid #006296;
  outline-offset: -2px;
}

.c4:hover,
.c4[aria-expanded='true'] {
  background-color: rgb(0 0 0 / 0.5);
  border-color: transparent;
  color: #FFFFFF;
}

.c4[aria-disabled='true'] {
  background-color: transparent;
  border-color: transparent;
  color: #006296;
  cursor: not-allowed;
}

.c4 > svg {
  height: var(--size-1x);
  width: var(--size-1x);
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: var(--border-radius);
  box-shadow: 0 16px 32px 0 rgb(0 0 0 / 5%);
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: var(--spacing-2x);
  -webkit-transition: 0.3s ease;
  transition: 0.3s ease;
  width: 400px;
  -webkit-animation: dlEaXy 0.25s ease-out;
  animation: dlEaXy 0.25s ease-out;
  background: #602FA0;
  color: #FFFFFF;
}

.c2 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  font-size: 1rem;
  line-height: 1.5rem;
  margin: 0 var(--spacing-1halfx);
}

.c3 {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  color: #FFFFFF;
  margin: calc(-1 * var(--spacing-half)) calc(-1 * var(--spacing-half)) calc(-1 * var(--spacing-half)) 0;
}

.c1 {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  height: var(--size-1x);
  margin-top: 0.25rem;
  width: var(--size-1x);
}

<ToastContainer
  id="an id"
  message="a message"
  position="bottom-right"
  type="discovery"
>
  <styled.div
    isMobile={false}
    position="bottom-right"
    role="status"
    type="discovery"
  >
    <div
      className="c0"
      role="status"
      type="discovery"
    >
      <Styled(Icon)
        isMobile={false}
        name="lightbulb"
        role="img"
        size="16"
        type="discovery"
      >
        <Icon
          aria-label="discovery"
          className="c1"
          focusable={true}
          isMobile={false}
          name="lightbulb"
          role="img"
          size="16"
          type="discovery"
        >
          <svg
            aria-label="discovery"
            className="c1"
            color="currentColor"
            focusable={true}
            height="16"
            isMobile={false}
            role="img"
            type="discovery"
            width="16"
          />
        </Icon>
      </Styled(Icon)>
      <styled.p
        $isMobile={false}
      >
        <p
          className="c2"
        >
          a message
        </p>
      </styled.p>
      <Styled(IconButton)
        $isMobile={false}
        $type="discovery"
        buttonType="tertiary"
        data-testid="dismiss"
        inverted={true}
        label="Dismiss notification"
        onClick={[Function]}
        type="button"
      >
        <IconButton
          buttonType="tertiary"
          className="c3"
          data-testid="dismiss"
          iconName="x"
          inverted={true}
          label="Dismiss notification"
          onClick={[Function]}
          type="button"
        >
          <Styled(AbstractButton)
            aria-label="Dismiss notification"
            buttonType="tertiary"
            className="c3"
            data-testid="dismiss"
            focusable={true}
            inverted={true}
            isMobile={false}
            onClick={[Function]}
            size="medium"
            type="button"
          >
            <AbstractButton
              aria-label="Dismiss notification"
              buttonType="tertiary"
              className="c4 c3"
              data-testid="dismiss"
              focusable={true}
              inverted={true}
              isMobile={false}
              onClick={[Function]}
              size="medium"
              type="button"
            >
              <styled.button
                $focusable={true}
                aria-label="Dismiss notification"
                buttonType="tertiary"
                className="c4 c3"
                data-testid="dismiss"
                inverted={true}
                isMobile={false}
                onClick={[Function]}
                size="medium"
                type="button"
              >
                <button
                  aria-label="Dismiss notification"
                  className="c5 c4 c3"
                  data-testid="dismiss"
                  onClick={[Function]}
                  size="medium"
                  type="button"
                >
                  <Icon
                    aria-hidden="true"
                    name="x"
                    size="16"
                  >
                    <svg
                      aria-hidden="true"
                      color="currentColor"
                      focusable={false}
                      height="16"
                      width="16"
                    />
                  </Icon>
                </button>
              </styled.button>
            </AbstractButton>
          </Styled(AbstractButton)>
        </IconButton>
      </Styled(IconButton)>
    </div>
  </styled.div>
</ToastContainer>
`;

exports[`ToastContainer should match snapshot (neutral) 1`] = `
.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: inherit;
  border: 1px solid;
  border-radius: 1.5rem;
  box-sizing: border-box;
  color: inherit;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-family: inherit;
  font-size: 0.75rem;
  font-weight: var(--font-bold);
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-letter-spacing: 0.025rem;
  -moz-letter-spacing: 0.025rem;
  -ms-letter-spacing: 0.025rem;
  letter-spacing: 0.025rem;
  line-height: 1rem;
  min-height: var(--size-2x);
  min-width: 2rem;
  outline: none;
  padding: 0 var(--spacing-2x);
  text-transform: uppercase;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c5 {
  outline: 2px solid transparent;
  outline-offset: -2px;
}

.c5:focus {
  box-shadow: 0 0 0 2px #006296;
  outline: 2px solid #84C6EA;
  outline-offset: -2px;
}

.c5 > svg {
  height: var(--size-1x);
  width: var(--size-1x);
}

.c4 {
  background-color: transparent;
  border-color: transparent;
  color: #FFFFFF;
  padding: 0;
  width: var(--size-2x);
}

.c4 {
  outline: 2px solid transparent;
  outline-offset: -2px;
}

.c4:focus {
  box-shadow: 0 0 0 2px #84C6EA;
  outline: 2px solid #006296;
  outline-offset: -2px;
}

.c4:hover,
.c4[aria-expanded='true'] {
  background-color: rgb(0 0 0 / 0.5);
  border-color: transparent;
  color: #FFFFFF;
}

.c4[aria-disabled='true'] {
  background-color: transparent;
  border-color: transparent;
  color: #006296;
  cursor: not-allowed;
}

.c4 > svg {
  height: var(--size-1x);
  width: var(--size-1x);
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: var(--border-radius);
  box-shadow: 0 16px 32px 0 rgb(0 0 0 / 5%);
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: var(--spacing-2x);
  -webkit-transition: 0.3s ease;
  transition: 0.3s ease;
  width: 400px;
  -webkit-animation: dlEaXy 0.25s ease-out;
  animation: dlEaXy 0.25s ease-out;
  background: #60666E;
  color: #FFFFFF;
}

.c2 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  font-size: 1rem;
  line-height: 1.5rem;
  margin: 0 var(--spacing-1halfx);
}

.c3 {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  color: #FFFFFF;
  margin: calc(-1 * var(--spacing-half)) calc(-1 * var(--spacing-half)) calc(-1 * var(--spacing-half)) 0;
}

.c1 {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  height: var(--size-1x);
  margin-top: 0.25rem;
  width: var(--size-1x);
}

<ToastContainer
  id="an id"
  message="a message"
  position="bottom-right"
  type="neutral"
>
  <styled.div
    isMobile={false}
    position="bottom-right"
    role="status"
    type="neutral"
  >
    <div
      className="c0"
      role="status"
      type="neutral"
    >
      <Styled(Icon)
        isMobile={false}
        name="info"
        role="img"
        size="16"
        type="neutral"
      >
        <Icon
          aria-label="information"
          className="c1"
          focusable={true}
          isMobile={false}
          name="info"
          role="img"
          size="16"
          type="neutral"
        >
          <svg
            aria-label="information"
            className="c1"
            color="currentColor"
            focusable={true}
            height="16"
            isMobile={false}
            role="img"
            type="neutral"
            width="16"
          />
        </Icon>
      </Styled(Icon)>
      <styled.p
        $isMobile={false}
      >
        <p
          className="c2"
        >
          a message
        </p>
      </styled.p>
      <Styled(IconButton)
        $isMobile={false}
        $type="neutral"
        buttonType="tertiary"
        data-testid="dismiss"
        inverted={true}
        label="Dismiss notification"
        onClick={[Function]}
        type="button"
      >
        <IconButton
          buttonType="tertiary"
          className="c3"
          data-testid="dismiss"
          iconName="x"
          inverted={true}
          label="Dismiss notification"
          onClick={[Function]}
          type="button"
        >
          <Styled(AbstractButton)
            aria-label="Dismiss notification"
            buttonType="tertiary"
            className="c3"
            data-testid="dismiss"
            focusable={true}
            inverted={true}
            isMobile={false}
            onClick={[Function]}
            size="medium"
            type="button"
          >
            <AbstractButton
              aria-label="Dismiss notification"
              buttonType="tertiary"
              className="c4 c3"
              data-testid="dismiss"
              focusable={true}
              inverted={true}
              isMobile={false}
              onClick={[Function]}
              size="medium"
              type="button"
            >
              <styled.button
                $focusable={true}
                aria-label="Dismiss notification"
                buttonType="tertiary"
                className="c4 c3"
                data-testid="dismiss"
                inverted={true}
                isMobile={false}
                onClick={[Function]}
                size="medium"
                type="button"
              >
                <button
                  aria-label="Dismiss notification"
                  className="c5 c4 c3"
                  data-testid="dismiss"
                  onClick={[Function]}
                  size="medium"
                  type="button"
                >
                  <Icon
                    aria-hidden="true"
                    name="x"
                    size="16"
                  >
                    <svg
                      aria-hidden="true"
                      color="currentColor"
                      focusable={false}
                      height="16"
                      width="16"
                    />
                  </Icon>
                </button>
              </styled.button>
            </AbstractButton>
          </Styled(AbstractButton)>
        </IconButton>
      </Styled(IconButton)>
    </div>
  </styled.div>
</ToastContainer>
`;

exports[`ToastContainer should match snapshot (success) 1`] = `
.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: inherit;
  border: 1px solid;
  border-radius: 1.5rem;
  box-sizing: border-box;
  color: inherit;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-family: inherit;
  font-size: 0.75rem;
  font-weight: var(--font-bold);
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-letter-spacing: 0.025rem;
  -moz-letter-spacing: 0.025rem;
  -ms-letter-spacing: 0.025rem;
  letter-spacing: 0.025rem;
  line-height: 1rem;
  min-height: var(--size-2x);
  min-width: 2rem;
  outline: none;
  padding: 0 var(--spacing-2x);
  text-transform: uppercase;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c5 {
  outline: 2px solid transparent;
  outline-offset: -2px;
}

.c5:focus {
  box-shadow: 0 0 0 2px #006296;
  outline: 2px solid #84C6EA;
  outline-offset: -2px;
}

.c5 > svg {
  height: var(--size-1x);
  width: var(--size-1x);
}

.c4 {
  background-color: transparent;
  border-color: transparent;
  color: #FFFFFF;
  padding: 0;
  width: var(--size-2x);
}

.c4 {
  outline: 2px solid transparent;
  outline-offset: -2px;
}

.c4:focus {
  box-shadow: 0 0 0 2px #84C6EA;
  outline: 2px solid #006296;
  outline-offset: -2px;
}

.c4:hover,
.c4[aria-expanded='true'] {
  background-color: rgb(0 0 0 / 0.5);
  border-color: transparent;
  color: #FFFFFF;
}

.c4[aria-disabled='true'] {
  background-color: transparent;
  border-color: transparent;
  color: #006296;
  cursor: not-allowed;
}

.c4 > svg {
  height: var(--size-1x);
  width: var(--size-1x);
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: var(--border-radius);
  box-shadow: 0 16px 32px 0 rgb(0 0 0 / 5%);
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: var(--spacing-2x);
  -webkit-transition: 0.3s ease;
  transition: 0.3s ease;
  width: 400px;
  -webkit-animation: dlEaXy 0.25s ease-out;
  animation: dlEaXy 0.25s ease-out;
  background: #008533;
  color: #FFFFFF;
}

.c2 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  font-size: 1rem;
  line-height: 1.5rem;
  margin: 0 var(--spacing-1halfx);
}

.c3 {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  color: #FFFFFF;
  margin: calc(-1 * var(--spacing-half)) calc(-1 * var(--spacing-half)) calc(-1 * var(--spacing-half)) 0;
}

.c1 {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  height: var(--size-1x);
  margin-top: 0.25rem;
  width: var(--size-1x);
}

<ToastContainer
  id="an id"
  message="a message"
  position="bottom-right"
  type="success"
>
  <styled.div
    isMobile={false}
    position="bottom-right"
    role="status"
    type="success"
  >
    <div
      className="c0"
      role="status"
      type="success"
    >
      <Styled(Icon)
        isMobile={false}
        name="check"
        role="img"
        size="16"
        type="success"
      >
        <Icon
          aria-label="success"
          className="c1"
          focusable={true}
          isMobile={false}
          name="check"
          role="img"
          size="16"
          type="success"
        >
          <svg
            aria-label="success"
            className="c1"
            color="currentColor"
            focusable={true}
            height="16"
            isMobile={false}
            role="img"
            type="success"
            width="16"
          />
        </Icon>
      </Styled(Icon)>
      <styled.p
        $isMobile={false}
      >
        <p
          className="c2"
        >
          a message
        </p>
      </styled.p>
      <Styled(IconButton)
        $isMobile={false}
        $type="success"
        buttonType="tertiary"
        data-testid="dismiss"
        inverted={true}
        label="Dismiss notification"
        onClick={[Function]}
        type="button"
      >
        <IconButton
          buttonType="tertiary"
          className="c3"
          data-testid="dismiss"
          iconName="x"
          inverted={true}
          label="Dismiss notification"
          onClick={[Function]}
          type="button"
        >
          <Styled(AbstractButton)
            aria-label="Dismiss notification"
            buttonType="tertiary"
            className="c3"
            data-testid="dismiss"
            focusable={true}
            inverted={true}
            isMobile={false}
            onClick={[Function]}
            size="medium"
            type="button"
          >
            <AbstractButton
              aria-label="Dismiss notification"
              buttonType="tertiary"
              className="c4 c3"
              data-testid="dismiss"
              focusable={true}
              inverted={true}
              isMobile={false}
              onClick={[Function]}
              size="medium"
              type="button"
            >
              <styled.button
                $focusable={true}
                aria-label="Dismiss notification"
                buttonType="tertiary"
                className="c4 c3"
                data-testid="dismiss"
                inverted={true}
                isMobile={false}
                onClick={[Function]}
                size="medium"
                type="button"
              >
                <button
                  aria-label="Dismiss notification"
                  className="c5 c4 c3"
                  data-testid="dismiss"
                  onClick={[Function]}
                  size="medium"
                  type="button"
                >
                  <Icon
                    aria-hidden="true"
                    name="x"
                    size="16"
                  >
                    <svg
                      aria-hidden="true"
                      color="currentColor"
                      focusable={false}
                      height="16"
                      width="16"
                    />
                  </Icon>
                </button>
              </styled.button>
            </AbstractButton>
          </Styled(AbstractButton)>
        </IconButton>
      </Styled(IconButton)>
    </div>
  </styled.div>
</ToastContainer>
`;

exports[`ToastContainer should match snapshot (warning) 1`] = `
.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: inherit;
  border: 1px solid;
  border-radius: 1.5rem;
  box-sizing: border-box;
  color: inherit;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-family: inherit;
  font-size: 0.75rem;
  font-weight: var(--font-bold);
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-letter-spacing: 0.025rem;
  -moz-letter-spacing: 0.025rem;
  -ms-letter-spacing: 0.025rem;
  letter-spacing: 0.025rem;
  line-height: 1rem;
  min-height: var(--size-2x);
  min-width: 2rem;
  outline: none;
  padding: 0 var(--spacing-2x);
  text-transform: uppercase;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c5 {
  outline: 2px solid transparent;
  outline-offset: -2px;
}

.c5:focus {
  box-shadow: 0 0 0 2px #006296;
  outline: 2px solid #84C6EA;
  outline-offset: -2px;
}

.c5 > svg {
  height: var(--size-1x);
  width: var(--size-1x);
}

.c4 {
  background-color: transparent;
  border-color: transparent;
  color: #FFFFFF;
  padding: 0;
  width: var(--size-2x);
}

.c4 {
  outline: 2px solid transparent;
  outline-offset: -2px;
}

.c4:focus {
  box-shadow: 0 0 0 2px #84C6EA;
  outline: 2px solid #006296;
  outline-offset: -2px;
}

.c4:hover,
.c4[aria-expanded='true'] {
  background-color: rgb(0 0 0 / 0.5);
  border-color: transparent;
  color: #FFFFFF;
}

.c4[aria-disabled='true'] {
  background-color: transparent;
  border-color: transparent;
  color: #006296;
  cursor: not-allowed;
}

.c4 > svg {
  height: var(--size-1x);
  width: var(--size-1x);
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: var(--border-radius);
  box-shadow: 0 16px 32px 0 rgb(0 0 0 / 5%);
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: var(--spacing-2x);
  -webkit-transition: 0.3s ease;
  transition: 0.3s ease;
  width: 400px;
  -webkit-animation: dlEaXy 0.25s ease-out;
  animation: dlEaXy 0.25s ease-out;
  background: #F5A200;
  color: #1B1C1E;
}

.c2 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  font-size: 1rem;
  line-height: 1.5rem;
  margin: 0 var(--spacing-1halfx);
}

.c3 {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  color: #1B1C1E;
  margin: calc(-1 * var(--spacing-half)) calc(-1 * var(--spacing-half)) calc(-1 * var(--spacing-half)) 0;
}

.c1 {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  height: var(--size-1x);
  margin-top: 0.25rem;
  width: var(--size-1x);
}

<ToastContainer
  id="an id"
  message="a message"
  position="bottom-right"
  type="warning"
>
  <styled.div
    isMobile={false}
    position="bottom-right"
    role="status"
    type="warning"
  >
    <div
      className="c0"
      role="status"
      type="warning"
    >
      <Styled(Icon)
        isMobile={false}
        name="alertTriangle"
        role="img"
        size="16"
        type="warning"
      >
        <Icon
          aria-label="warning"
          className="c1"
          focusable={true}
          isMobile={false}
          name="alertTriangle"
          role="img"
          size="16"
          type="warning"
        >
          <svg
            aria-label="warning"
            className="c1"
            color="currentColor"
            focusable={true}
            height="16"
            isMobile={false}
            role="img"
            type="warning"
            width="16"
          />
        </Icon>
      </Styled(Icon)>
      <styled.p
        $isMobile={false}
      >
        <p
          className="c2"
        >
          a message
        </p>
      </styled.p>
      <Styled(IconButton)
        $isMobile={false}
        $type="warning"
        buttonType="tertiary"
        data-testid="dismiss"
        inverted={false}
        label="Dismiss notification"
        onClick={[Function]}
        type="button"
      >
        <IconButton
          buttonType="tertiary"
          className="c3"
          data-testid="dismiss"
          iconName="x"
          inverted={true}
          label="Dismiss notification"
          onClick={[Function]}
          type="button"
        >
          <Styled(AbstractButton)
            aria-label="Dismiss notification"
            buttonType="tertiary"
            className="c3"
            data-testid="dismiss"
            focusable={true}
            inverted={true}
            isMobile={false}
            onClick={[Function]}
            size="medium"
            type="button"
          >
            <AbstractButton
              aria-label="Dismiss notification"
              buttonType="tertiary"
              className="c4 c3"
              data-testid="dismiss"
              focusable={true}
              inverted={true}
              isMobile={false}
              onClick={[Function]}
              size="medium"
              type="button"
            >
              <styled.button
                $focusable={true}
                aria-label="Dismiss notification"
                buttonType="tertiary"
                className="c4 c3"
                data-testid="dismiss"
                inverted={true}
                isMobile={false}
                onClick={[Function]}
                size="medium"
                type="button"
              >
                <button
                  aria-label="Dismiss notification"
                  className="c5 c4 c3"
                  data-testid="dismiss"
                  onClick={[Function]}
                  size="medium"
                  type="button"
                >
                  <Icon
                    aria-hidden="true"
                    name="x"
                    size="16"
                  >
                    <svg
                      aria-hidden="true"
                      color="currentColor"
                      focusable={false}
                      height="16"
                      width="16"
                    />
                  </Icon>
                </button>
              </styled.button>
            </AbstractButton>
          </Styled(AbstractButton)>
        </IconButton>
      </Styled(IconButton)>
    </div>
  </styled.div>
</ToastContainer>
`;
