// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProgressCircle Has secondary styles 1`] = `
.c2 {
  -webkit-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg);
  -webkit-transform-origin: 50% 50%;
  -ms-transform-origin: 50% 50%;
  transform-origin: 50% 50%;
}

.c0 {
  display: inline-block;
}

.c1 {
  height: 9.125rem;
  position: relative;
  width: 9.125rem;
}

.c3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 9.125rem;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: absolute;
  top: 0;
  width: 9.125rem;
}

.c3 p {
  color: #57666E;
  font-size: 1.625rem;
}

.c4 {
  color: #57666E;
  text-align: center;
  width: 9.125rem;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <svg
      height={146}
      width={146}
    >
      <circle
        cx={73}
        cy={73}
        fill="transparent"
        r={57}
        stroke="#D9DDE2"
        strokeDasharray="358.1415625092364 358.1415625092364"
        strokeLinecap="round"
        strokeWidth={8}
      />
      <circle
        className="c2"
        cx={73}
        cy={73}
        fill="transparent"
        r={57}
        stroke="#304E63"
        strokeDasharray="358.1415625092364 358.1415625092364"
        strokeLinecap="round"
        strokeWidth={8}
        style={
          Object {
            "strokeDashoffset": 121.76813125314035,
          }
        }
      />
    </svg>
    <div
      className="c3"
    >
      <p>
        56 k$
      </p>
    </div>
  </div>
  <p
    className="c4"
  >
    RRSP
  </p>
</div>
`;

exports[`ProgressCircle Matches the snapshot 1`] = `
.c2 {
  -webkit-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg);
  -webkit-transform-origin: 50% 50%;
  -ms-transform-origin: 50% 50%;
  transform-origin: 50% 50%;
}

.c0 {
  display: inline-block;
}

.c1 {
  height: 9.125rem;
  position: relative;
  width: 9.125rem;
}

.c3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 9.125rem;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: absolute;
  top: 0;
  width: 9.125rem;
}

.c3 p {
  color: #000000;
  font-size: 1.625rem;
}

.c4 {
  color: #000000;
  text-align: center;
  width: 9.125rem;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <svg
      height={146}
      width={146}
    >
      <circle
        cx={73}
        cy={73}
        fill="transparent"
        r={57}
        stroke="#D9DDE2"
        strokeDasharray="358.1415625092364 358.1415625092364"
        strokeLinecap="round"
        strokeWidth={8}
      />
      <circle
        className="c2"
        cx={73}
        cy={73}
        fill="transparent"
        r={57}
        stroke="#304E63"
        strokeDasharray="358.1415625092364 358.1415625092364"
        strokeLinecap="round"
        strokeWidth={8}
        style={
          Object {
            "strokeDashoffset": 121.76813125314035,
          }
        }
      />
    </svg>
    <div
      className="c3"
    >
      <p>
        56 k$
      </p>
    </div>
  </div>
  <p
    className="c4"
  >
    RRSP
  </p>
</div>
`;

exports[`Theme Wrapper Returns component with default theme 1`] = `
.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: inherit;
  border: 1px solid;
  border-radius: 1.25rem;
  box-sizing: border-box;
  color: inherit;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 0.75rem;
  font-weight: 700;
  -webkit-letter-spacing: 0.025rem;
  -moz-letter-spacing: 0.025rem;
  -ms-letter-spacing: 0.025rem;
  letter-spacing: 0.025rem;
  line-height: normal;
  min-height: 2rem;
  min-width: 2rem;
  outline: none;
  padding: 0.5rem 1rem;
  text-transform: uppercase;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  background-color: #EF483E;
  border-color: #EF483E;
  color: #FFFFFF;
}

.c0:not(:disabled) {
  cursor: pointer;
}

.c0 > svg {
  color: inherit;
}

.c0:hover {
  background-color: #D41F14;
  border-color: #D41F14;
}

.c0:disabled,
.c0:disabled:focus,
.c0:disabled:hover {
  background-color: #FF847C;
  border-color: #FF847C;
}

<button
  className="c0"
  onClick={[Function]}
>
  
</button>
`;

exports[`Theme Wrapper Returns component with test theme 1`] = `
.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: inherit;
  border: 1px solid;
  border-radius: 1.25rem;
  box-sizing: border-box;
  color: inherit;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 0.75rem;
  font-weight: 700;
  -webkit-letter-spacing: 0.025rem;
  -moz-letter-spacing: 0.025rem;
  -ms-letter-spacing: 0.025rem;
  letter-spacing: 0.025rem;
  line-height: normal;
  min-height: 2rem;
  min-width: 2rem;
  outline: none;
  padding: 0.5rem 1rem;
  text-transform: uppercase;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  background-color: #B3974B;
  border-color: #B3974B;
  color: #FFFFFF;
}

.c0:not(:disabled) {
  cursor: pointer;
}

.c0 > svg {
  color: inherit;
}

.c0:hover {
  background-color: #FFD86B;
  border-color: #FFD86B;
}

.c0:disabled,
.c0:disabled:focus,
.c0:disabled:hover {
  background-color: #736130;
  border-color: #736130;
}

<button
  className="c0"
  onClick={[Function]}
>
  
</button>
`;
