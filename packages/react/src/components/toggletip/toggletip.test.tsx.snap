// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Toggletip Has default desktop styles (defaultOpen) 1`] = `
.c1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: inherit;
  border: 1px solid;
  border-radius: 1.5rem;
  box-sizing: border-box;
  color: inherit;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-family: inherit;
  font-size: 0.75rem;
  font-weight: var(--font-bold);
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-letter-spacing: 0.025rem;
  -moz-letter-spacing: 0.025rem;
  -ms-letter-spacing: 0.025rem;
  letter-spacing: 0.025rem;
  line-height: 1rem;
  min-height: var(--size-2x);
  min-width: 2rem;
  outline: none;
  padding: 0 var(--spacing-2x);
  text-transform: uppercase;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c1:focus {
  outline: none;
}

.c1:focus {
  outline: none;
  border-color: #006296;
  box-shadow: 0 0 0 2px #84C6EA;
}

.c1:not(:disabled) {
  cursor: pointer;
}

.c1 > svg {
  color: inherit;
  height: var(--size-1x);
  width: var(--size-1x);
}

.c0 {
  background-color: transparent;
  border-color: transparent;
  color: #60666E;
  padding: 0;
  width: var(--size-2x);
}

.c0:focus {
  outline: none;
}

.c0:focus {
  outline: none;
  border-color: #006296;
  box-shadow: 0 0 0 2px #84C6EA;
}

.c0:hover,
.c0[aria-expanded='true'] {
  background-color: #DBDEE1;
  color: #1B1C1E;
}

.c0:disabled {
  background-color: transparent;
  color: #B7BBC2;
}

.c0 > svg {
  height: var(--size-1x);
  width: var(--size-1x);
}

.c4 {
  height: 1rem;
  position: absolute;
  width: 1rem;
}

.c4::before {
  border-style: solid;
  content: '';
  display: block;
  height: 0;
  margin: auto;
  width: 0;
}

.c4::after {
  border-style: solid;
  content: '';
  display: block;
  height: 0;
  margin: auto;
  position: absolute;
  width: 0;
}

.c2 {
  background-color: #FFFFFF;
  border: 1px solid #60666E;
  border-radius: var(--border-radius);
  box-shadow: 0 10px 20px 0 rgb(0 0 0 / 19%);
  box-sizing: border-box;
  color: #000000;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  font-size: 0.875rem;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  line-height: 1.25rem;
  margin: 0;
  max-width: 327px;
  min-height: 2rem;
  padding: var(--spacing-1x) var(--spacing-1halfx);
  -webkit-transition: opacity 300ms;
  transition: opacity 300ms;
  z-index: 1000;
}

.c2[data-popper-placement*="bottom"] > .c3 {
  height: 1rem;
  left: 0;
  margin-top: -0.35rem;
  top: 0;
  width: 1rem;
}

.c2[data-popper-placement*="bottom"] > .c3::before {
  border-color: transparent transparent #60666E transparent;
  border-width: 0 0.5rem 0.4rem;
  position: absolute;
  top: -1px;
}

.c2[data-popper-placement*="bottom"] > .c3::after {
  border-color: transparent transparent #FFFFFF transparent;
  border-width: 0 0.5rem 0.4rem;
}

.c2[data-popper-placement*="top"] > .c3 {
  bottom: 0;
  height: 1rem;
  left: 0;
  margin-bottom: -1rem;
  width: 1rem;
}

.c2[data-popper-placement*="top"] > .c3::before {
  border-color: #60666E transparent transparent transparent;
  border-width: 0.4rem 0.5rem 0;
  position: absolute;
  top: 1px;
}

.c2[data-popper-placement*="top"] > .c3::after {
  border-color: #FFFFFF transparent transparent transparent;
  border-width: 0.4rem 0.5rem 0;
}

.c2[data-popper-placement*="right"] > .c3 {
  height: 1rem;
  left: 0;
  margin-left: -0.7rem;
  width: 1rem;
}

.c2[data-popper-placement*="right"] > .c3::before {
  border-color: transparent #60666E transparent transparent;
  border-width: 0.5rem 0.4rem 0.5rem 0;
}

.c2[data-popper-placement*="right"] > .c3::after {
  border-color: transparent #FFFFFF transparent transparent;
  border-width: 0.5rem 0.4rem 0.5rem 0;
  left: 0.375rem;
  top: 0;
}

.c2[data-popper-placement*="left"] > .c3 {
  height: 1rem;
  margin-right: -0.7rem;
  right: 0;
  width: 1rem;
}

.c2[data-popper-placement*="left"] > .c3::before {
  border-color: transparent transparent transparent #60666E;
  border-width: 0.5rem 0 0.5rem 0.4rem;
}

.c2[data-popper-placement*="left"] > .c3::after {
  border-color: transparent transparent transparent #FFFFFF;
  border-width: 0.5rem 0 0.5rem 0.4rem;
  left: 0.25rem;
  top: 0;
}

<Toggletip
  defaultOpen={true}
>
  <IconButton
    aria-controls="uuid1"
    aria-expanded={true}
    buttonType="tertiary"
    data-testid="toggletip"
    iconName="info"
    inverted={false}
    label="info"
    onClick={[Function]}
    type="button"
  >
    <Styled(AbstractButton)
      aria-controls="uuid1"
      aria-expanded={true}
      aria-label="info"
      buttonType="tertiary"
      data-testid="toggletip"
      inverted={false}
      isMobile={false}
      onClick={[Function]}
      type="button"
    >
      <AbstractButton
        aria-controls="uuid1"
        aria-expanded={true}
        aria-label="info"
        buttonType="tertiary"
        className="c0"
        data-testid="toggletip"
        inverted={false}
        isMobile={false}
        onClick={[Function]}
        type="button"
      >
        <styled.button
          aria-controls="uuid1"
          aria-expanded={true}
          aria-label="info"
          buttonType="tertiary"
          className="c0"
          data-testid="toggletip"
          inverted={false}
          isMobile={false}
          onClick={[Function]}
          type="button"
        >
          <button
            aria-controls="uuid1"
            aria-expanded={true}
            aria-label="info"
            className="c1 c0"
            data-testid="toggletip"
            onClick={[Function]}
            type="button"
          >
            <Icon
              aria-hidden="true"
              color="currentColor"
              name="info"
              size="16"
            >
              <svg
                aria-hidden="true"
                color="currentColor"
                focusable={false}
                height="16"
                width="16"
              />
            </Icon>
          </button>
        </styled.button>
      </AbstractButton>
    </Styled(AbstractButton)>
  </IconButton>
  <styled.div
    data-popper-interactive={false}
    data-testid="toggletip-content-container"
    id="uuid1"
    isMobile={false}
    style={
      {
        "left": "0",
        "position": "absolute",
        "top": "0",
      }
    }
  >
    <div
      className="c2"
      data-popper-interactive={false}
      data-testid="toggletip-content-container"
      id="uuid1"
      style={
        {
          "left": "0",
          "position": "absolute",
          "top": "0",
        }
      }
    >
      <styled.div
        data-popper-arrow={true}
        style={
          {
            "position": "absolute",
          }
        }
      >
        <div
          className="c3 c4"
          data-popper-arrow={true}
          style={
            {
              "position": "absolute",
            }
          }
        />
      </styled.div>
      Test Content
    </div>
  </styled.div>
</Toggletip>
`;

exports[`Toggletip Has default desktop styles 1`] = `
.c1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: inherit;
  border: 1px solid;
  border-radius: 1.5rem;
  box-sizing: border-box;
  color: inherit;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-family: inherit;
  font-size: 0.75rem;
  font-weight: var(--font-bold);
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-letter-spacing: 0.025rem;
  -moz-letter-spacing: 0.025rem;
  -ms-letter-spacing: 0.025rem;
  letter-spacing: 0.025rem;
  line-height: 1rem;
  min-height: var(--size-2x);
  min-width: 2rem;
  outline: none;
  padding: 0 var(--spacing-2x);
  text-transform: uppercase;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c1:focus {
  outline: none;
}

.c1:focus {
  outline: none;
  border-color: #006296;
  box-shadow: 0 0 0 2px #84C6EA;
}

.c1:not(:disabled) {
  cursor: pointer;
}

.c1 > svg {
  color: inherit;
  height: var(--size-1x);
  width: var(--size-1x);
}

.c0 {
  background-color: transparent;
  border-color: transparent;
  color: #60666E;
  padding: 0;
  width: var(--size-2x);
}

.c0:focus {
  outline: none;
}

.c0:focus {
  outline: none;
  border-color: #006296;
  box-shadow: 0 0 0 2px #84C6EA;
}

.c0:hover,
.c0[aria-expanded='true'] {
  background-color: #DBDEE1;
  color: #1B1C1E;
}

.c0:disabled {
  background-color: transparent;
  color: #B7BBC2;
}

.c0 > svg {
  height: var(--size-1x);
  width: var(--size-1x);
}

<Toggletip>
  <IconButton
    aria-controls="uuid1"
    aria-expanded={false}
    buttonType="tertiary"
    data-testid="toggletip"
    iconName="info"
    inverted={false}
    label="info"
    onClick={[Function]}
    type="button"
  >
    <Styled(AbstractButton)
      aria-controls="uuid1"
      aria-expanded={false}
      aria-label="info"
      buttonType="tertiary"
      data-testid="toggletip"
      inverted={false}
      isMobile={false}
      onClick={[Function]}
      type="button"
    >
      <AbstractButton
        aria-controls="uuid1"
        aria-expanded={false}
        aria-label="info"
        buttonType="tertiary"
        className="c0"
        data-testid="toggletip"
        inverted={false}
        isMobile={false}
        onClick={[Function]}
        type="button"
      >
        <styled.button
          aria-controls="uuid1"
          aria-expanded={false}
          aria-label="info"
          buttonType="tertiary"
          className="c0"
          data-testid="toggletip"
          inverted={false}
          isMobile={false}
          onClick={[Function]}
          type="button"
        >
          <button
            aria-controls="uuid1"
            aria-expanded={false}
            aria-label="info"
            className="c1 c0"
            data-testid="toggletip"
            onClick={[Function]}
            type="button"
          >
            <Icon
              aria-hidden="true"
              color="currentColor"
              name="info"
              size="16"
            >
              <svg
                aria-hidden="true"
                color="currentColor"
                focusable={false}
                height="16"
                width="16"
              />
            </Icon>
          </button>
        </styled.button>
      </AbstractButton>
    </Styled(AbstractButton)>
  </IconButton>
</Toggletip>
`;

exports[`Toggletip Has mobile styles (defaultOpen) 1`] = `
.c1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: inherit;
  border: 1px solid;
  border-radius: 1.5rem;
  box-sizing: border-box;
  color: inherit;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-family: inherit;
  font-size: 0.875rem;
  font-weight: var(--font-bold);
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-letter-spacing: 0.033125rem;
  -moz-letter-spacing: 0.033125rem;
  -ms-letter-spacing: 0.033125rem;
  letter-spacing: 0.033125rem;
  line-height: 1.5rem;
  min-height: var(--size-3x);
  min-width: 2rem;
  outline: none;
  padding: 0 var(--spacing-3x);
  text-transform: uppercase;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c1:focus {
  outline: none;
}

.c1:focus {
  outline: none;
  border-color: #006296;
  box-shadow: 0 0 0 2px #84C6EA;
}

.c1:not(:disabled) {
  cursor: pointer;
}

.c1 > svg {
  color: inherit;
  height: var(--size-1halfx);
  width: var(--size-1halfx);
}

.c0 {
  background-color: transparent;
  border-color: transparent;
  color: #60666E;
  padding: 0;
  width: var(--size-3x);
}

.c0:focus {
  outline: none;
}

.c0:focus {
  outline: none;
  border-color: #006296;
  box-shadow: 0 0 0 2px #84C6EA;
}

.c0:hover,
.c0[aria-expanded='true'] {
  background-color: #DBDEE1;
  color: #1B1C1E;
}

.c0:disabled {
  background-color: transparent;
  color: #B7BBC2;
}

.c0 > svg {
  height: var(--size-1halfx);
  width: var(--size-1halfx);
}

.c4 {
  height: 1rem;
  position: absolute;
  width: 1rem;
}

.c4::before {
  border-style: solid;
  content: '';
  display: block;
  height: 0;
  margin: auto;
  width: 0;
}

.c4::after {
  border-style: solid;
  content: '';
  display: block;
  height: 0;
  margin: auto;
  position: absolute;
  width: 0;
}

.c2 {
  background-color: #FFFFFF;
  border: 1px solid #60666E;
  border-radius: var(--border-radius);
  box-shadow: 0 10px 20px 0 rgb(0 0 0 / 19%);
  box-sizing: border-box;
  color: #000000;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  font-size: 1rem;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  line-height: 1.5rem;
  margin: 0;
  max-width: 327px;
  min-height: 4.5rem;
  padding: var(--spacing-3x);
  -webkit-transition: opacity 300ms;
  transition: opacity 300ms;
  z-index: 1000;
}

.c2[data-popper-placement*="bottom"] > .c3 {
  height: 1rem;
  left: 0;
  margin-top: -0.35rem;
  top: 0;
  width: 1rem;
}

.c2[data-popper-placement*="bottom"] > .c3::before {
  border-color: transparent transparent #60666E transparent;
  border-width: 0 0.5rem 0.4rem;
  position: absolute;
  top: -1px;
}

.c2[data-popper-placement*="bottom"] > .c3::after {
  border-color: transparent transparent #FFFFFF transparent;
  border-width: 0 0.5rem 0.4rem;
}

.c2[data-popper-placement*="top"] > .c3 {
  bottom: 0;
  height: 1rem;
  left: 0;
  margin-bottom: -1rem;
  width: 1rem;
}

.c2[data-popper-placement*="top"] > .c3::before {
  border-color: #60666E transparent transparent transparent;
  border-width: 0.4rem 0.5rem 0;
  position: absolute;
  top: 1px;
}

.c2[data-popper-placement*="top"] > .c3::after {
  border-color: #FFFFFF transparent transparent transparent;
  border-width: 0.4rem 0.5rem 0;
}

.c2[data-popper-placement*="right"] > .c3 {
  height: 1rem;
  left: 0;
  margin-left: -0.7rem;
  width: 1rem;
}

.c2[data-popper-placement*="right"] > .c3::before {
  border-color: transparent #60666E transparent transparent;
  border-width: 0.5rem 0.4rem 0.5rem 0;
}

.c2[data-popper-placement*="right"] > .c3::after {
  border-color: transparent #FFFFFF transparent transparent;
  border-width: 0.5rem 0.4rem 0.5rem 0;
  left: 0.375rem;
  top: 0;
}

.c2[data-popper-placement*="left"] > .c3 {
  height: 1rem;
  margin-right: -0.7rem;
  right: 0;
  width: 1rem;
}

.c2[data-popper-placement*="left"] > .c3::before {
  border-color: transparent transparent transparent #60666E;
  border-width: 0.5rem 0 0.5rem 0.4rem;
}

.c2[data-popper-placement*="left"] > .c3::after {
  border-color: transparent transparent transparent #FFFFFF;
  border-width: 0.5rem 0 0.5rem 0.4rem;
  left: 0.25rem;
  top: 0;
}

<Toggletip
  defaultOpen={true}
>
  <IconButton
    aria-controls="uuid1"
    aria-expanded={true}
    buttonType="tertiary"
    data-testid="toggletip"
    iconName="info"
    inverted={false}
    label="info"
    onClick={[Function]}
    type="button"
  >
    <Styled(AbstractButton)
      aria-controls="uuid1"
      aria-expanded={true}
      aria-label="info"
      buttonType="tertiary"
      data-testid="toggletip"
      inverted={false}
      isMobile={true}
      onClick={[Function]}
      type="button"
    >
      <AbstractButton
        aria-controls="uuid1"
        aria-expanded={true}
        aria-label="info"
        buttonType="tertiary"
        className="c0"
        data-testid="toggletip"
        inverted={false}
        isMobile={true}
        onClick={[Function]}
        type="button"
      >
        <styled.button
          aria-controls="uuid1"
          aria-expanded={true}
          aria-label="info"
          buttonType="tertiary"
          className="c0"
          data-testid="toggletip"
          inverted={false}
          isMobile={true}
          onClick={[Function]}
          type="button"
        >
          <button
            aria-controls="uuid1"
            aria-expanded={true}
            aria-label="info"
            className="c1 c0"
            data-testid="toggletip"
            onClick={[Function]}
            type="button"
          >
            <Icon
              aria-hidden="true"
              color="currentColor"
              name="info"
              size="24"
            >
              <svg
                aria-hidden="true"
                color="currentColor"
                focusable={false}
                height="24"
                width="24"
              />
            </Icon>
          </button>
        </styled.button>
      </AbstractButton>
    </Styled(AbstractButton)>
  </IconButton>
  <styled.div
    data-popper-interactive={false}
    data-testid="toggletip-content-container"
    id="uuid1"
    isMobile={true}
    style={
      {
        "left": "0",
        "position": "absolute",
        "top": "0",
      }
    }
  >
    <div
      className="c2"
      data-popper-interactive={false}
      data-testid="toggletip-content-container"
      id="uuid1"
      style={
        {
          "left": "0",
          "position": "absolute",
          "top": "0",
        }
      }
    >
      <styled.div
        data-popper-arrow={true}
        style={
          {
            "position": "absolute",
          }
        }
      >
        <div
          className="c3 c4"
          data-popper-arrow={true}
          style={
            {
              "position": "absolute",
            }
          }
        />
      </styled.div>
      Test Content
    </div>
  </styled.div>
</Toggletip>
`;

exports[`Toggletip Has mobile styles 1`] = `
.c1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: inherit;
  border: 1px solid;
  border-radius: 1.5rem;
  box-sizing: border-box;
  color: inherit;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-family: inherit;
  font-size: 0.875rem;
  font-weight: var(--font-bold);
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-letter-spacing: 0.033125rem;
  -moz-letter-spacing: 0.033125rem;
  -ms-letter-spacing: 0.033125rem;
  letter-spacing: 0.033125rem;
  line-height: 1.5rem;
  min-height: var(--size-3x);
  min-width: 2rem;
  outline: none;
  padding: 0 var(--spacing-3x);
  text-transform: uppercase;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c1:focus {
  outline: none;
}

.c1:focus {
  outline: none;
  border-color: #006296;
  box-shadow: 0 0 0 2px #84C6EA;
}

.c1:not(:disabled) {
  cursor: pointer;
}

.c1 > svg {
  color: inherit;
  height: var(--size-1halfx);
  width: var(--size-1halfx);
}

.c0 {
  background-color: transparent;
  border-color: transparent;
  color: #60666E;
  padding: 0;
  width: var(--size-3x);
}

.c0:focus {
  outline: none;
}

.c0:focus {
  outline: none;
  border-color: #006296;
  box-shadow: 0 0 0 2px #84C6EA;
}

.c0:hover,
.c0[aria-expanded='true'] {
  background-color: #DBDEE1;
  color: #1B1C1E;
}

.c0:disabled {
  background-color: transparent;
  color: #B7BBC2;
}

.c0 > svg {
  height: var(--size-1halfx);
  width: var(--size-1halfx);
}

<Toggletip>
  <IconButton
    aria-controls="uuid1"
    aria-expanded={false}
    buttonType="tertiary"
    data-testid="toggletip"
    iconName="info"
    inverted={false}
    label="info"
    onClick={[Function]}
    type="button"
  >
    <Styled(AbstractButton)
      aria-controls="uuid1"
      aria-expanded={false}
      aria-label="info"
      buttonType="tertiary"
      data-testid="toggletip"
      inverted={false}
      isMobile={true}
      onClick={[Function]}
      type="button"
    >
      <AbstractButton
        aria-controls="uuid1"
        aria-expanded={false}
        aria-label="info"
        buttonType="tertiary"
        className="c0"
        data-testid="toggletip"
        inverted={false}
        isMobile={true}
        onClick={[Function]}
        type="button"
      >
        <styled.button
          aria-controls="uuid1"
          aria-expanded={false}
          aria-label="info"
          buttonType="tertiary"
          className="c0"
          data-testid="toggletip"
          inverted={false}
          isMobile={true}
          onClick={[Function]}
          type="button"
        >
          <button
            aria-controls="uuid1"
            aria-expanded={false}
            aria-label="info"
            className="c1 c0"
            data-testid="toggletip"
            onClick={[Function]}
            type="button"
          >
            <Icon
              aria-hidden="true"
              color="currentColor"
              name="info"
              size="24"
            >
              <svg
                aria-hidden="true"
                color="currentColor"
                focusable={false}
                height="24"
                width="24"
              />
            </Icon>
          </button>
        </styled.button>
      </AbstractButton>
    </Styled(AbstractButton)>
  </IconButton>
</Toggletip>
`;
