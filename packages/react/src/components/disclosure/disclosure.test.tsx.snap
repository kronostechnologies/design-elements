// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Disclosure Button matches the snapshot when collapsed 1`] = `
.c2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: inherit;
  border: 1px solid;
  border-radius: 1.5rem;
  box-sizing: border-box;
  color: inherit;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-family: inherit;
  font-size: 0.75rem;
  font-weight: var(--font-bold);
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-letter-spacing: 0.025rem;
  -moz-letter-spacing: 0.025rem;
  -ms-letter-spacing: 0.025rem;
  letter-spacing: 0.025rem;
  line-height: 1rem;
  min-height: var(--size-2x);
  min-width: 2rem;
  outline: none;
  padding: 0 var(--spacing-2x);
  text-transform: uppercase;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c2 {
  outline: 2px solid transparent;
  outline-offset: -2px;
}

.c2:focus {
  box-shadow: 0 0 0 2px #006296;
  outline: 2px solid #84C6EA;
  outline-offset: -2px;
}

.c2 > svg {
  color: inherit;
  height: var(--size-1x);
  width: var(--size-1x);
}

.c1 {
  background-color: #006296;
  border-color: #006296;
  color: #FFFFFF;
}

.c1 {
  outline: 2px solid transparent;
  outline-offset: -2px;
}

.c1:focus {
  box-shadow: 0 0 0 2px #006296;
  outline: 2px solid #84C6EA;
  outline-offset: -2px;
}

.c1:hover,
.c1[aria-expanded='true'] {
  background-color: #003A5A;
  border-color: #003A5A;
  color: #FFFFFF;
}

.c1[aria-disabled='true'] {
  background-color: #84C6EA;
  border-color: #84C6EA;
  color: #FFFFFF;
  cursor: not-allowed;
}

.c3 {
  background-color: #FFFFFF;
  border: 0;
  border-radius: var(--border-radius);
  box-shadow: 0 10px 20px 0 rgb(0 0 0 / 0.2);
  color: #1B1C1E;
  display: none;
  position: absolute;
  z-index: 700;
}

.c0 {
  position: relative;
}

<Disclosure
  buttonProps={
    {
      "buttonType": "primary",
      "label": "disclose content",
    }
  }
>
  <styled.div>
    <div
      className="c0"
    >
      <Button
        aria-controls="idContent"
        aria-expanded={false}
        buttonType="primary"
        label="disclose content"
        onBlur={[Function]}
        onClick={[Function]}
      >
        <Styled(AbstractButton)
          aria-controls="idContent"
          aria-expanded={false}
          buttonType="primary"
          focusable={true}
          isMobile={false}
          onBlur={[Function]}
          onClick={[Function]}
          type="button"
        >
          <AbstractButton
            aria-controls="idContent"
            aria-expanded={false}
            buttonType="primary"
            className="c1"
            focusable={true}
            isMobile={false}
            onBlur={[Function]}
            onClick={[Function]}
            type="button"
          >
            <styled.button
              $focusable={true}
              aria-controls="idContent"
              aria-expanded={false}
              buttonType="primary"
              className="c1"
              isMobile={false}
              onBlur={[Function]}
              onClick={[Function]}
              type="button"
            >
              <button
                aria-controls="idContent"
                aria-expanded={false}
                className="c2 c1"
                onBlur={[Function]}
                onClick={[Function]}
                type="button"
              >
                disclose content
              </button>
            </styled.button>
          </AbstractButton>
        </Styled(AbstractButton)>
      </Button>
      <styled.div
        $expanded={false}
        id="idContent"
      >
        <div
          className="c3"
          id="idContent"
        >
          content
        </div>
      </styled.div>
    </div>
  </styled.div>
</Disclosure>
`;

exports[`Disclosure Button matches the snapshot when expanded 1`] = `
.c2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: inherit;
  border: 1px solid;
  border-radius: 1.5rem;
  box-sizing: border-box;
  color: inherit;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-family: inherit;
  font-size: 0.75rem;
  font-weight: var(--font-bold);
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-letter-spacing: 0.025rem;
  -moz-letter-spacing: 0.025rem;
  -ms-letter-spacing: 0.025rem;
  letter-spacing: 0.025rem;
  line-height: 1rem;
  min-height: var(--size-2x);
  min-width: 2rem;
  outline: none;
  padding: 0 var(--spacing-2x);
  text-transform: uppercase;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c2 {
  outline: 2px solid transparent;
  outline-offset: -2px;
}

.c2:focus {
  box-shadow: 0 0 0 2px #006296;
  outline: 2px solid #84C6EA;
  outline-offset: -2px;
}

.c2 > svg {
  color: inherit;
  height: var(--size-1x);
  width: var(--size-1x);
}

.c1 {
  background-color: #006296;
  border-color: #006296;
  color: #FFFFFF;
}

.c1 {
  outline: 2px solid transparent;
  outline-offset: -2px;
}

.c1:focus {
  box-shadow: 0 0 0 2px #006296;
  outline: 2px solid #84C6EA;
  outline-offset: -2px;
}

.c1:hover,
.c1[aria-expanded='true'] {
  background-color: #003A5A;
  border-color: #003A5A;
  color: #FFFFFF;
}

.c1[aria-disabled='true'] {
  background-color: #84C6EA;
  border-color: #84C6EA;
  color: #FFFFFF;
  cursor: not-allowed;
}

.c3 {
  background-color: #FFFFFF;
  border: 1px solid #878F9A;
  border-radius: var(--border-radius);
  box-shadow: 0 10px 20px 0 rgb(0 0 0 / 0.2);
  color: #1B1C1E;
  display: block;
  position: absolute;
  z-index: 700;
}

.c0 {
  position: relative;
}

<Disclosure
  buttonProps={
    {
      "buttonType": "primary",
      "label": "disclose content",
    }
  }
>
  <styled.div>
    <div
      className="c0"
    >
      <Button
        aria-controls="idContent"
        aria-expanded={true}
        buttonType="primary"
        label="disclose content"
        onBlur={[Function]}
        onClick={[Function]}
      >
        <Styled(AbstractButton)
          aria-controls="idContent"
          aria-expanded={true}
          buttonType="primary"
          focusable={true}
          isMobile={false}
          onBlur={[Function]}
          onClick={[Function]}
          type="button"
        >
          <AbstractButton
            aria-controls="idContent"
            aria-expanded={true}
            buttonType="primary"
            className="c1"
            focusable={true}
            isMobile={false}
            onBlur={[Function]}
            onClick={[Function]}
            type="button"
          >
            <styled.button
              $focusable={true}
              aria-controls="idContent"
              aria-expanded={true}
              buttonType="primary"
              className="c1"
              isMobile={false}
              onBlur={[Function]}
              onClick={[Function]}
              type="button"
            >
              <button
                aria-controls="idContent"
                aria-expanded={true}
                className="c2 c1"
                onBlur={[Function]}
                onClick={[Function]}
                type="button"
              >
                disclose content
              </button>
            </styled.button>
          </AbstractButton>
        </Styled(AbstractButton)>
      </Button>
      <styled.div
        $expanded={true}
        id="idContent"
      >
        <div
          className="c3"
          id="idContent"
        >
          content
        </div>
      </styled.div>
    </div>
  </styled.div>
</Disclosure>
`;

exports[`Disclosure IconButton matches the snapshot when collapsed 1`] = `
.c2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: inherit;
  border: 1px solid;
  border-radius: 1.5rem;
  box-sizing: border-box;
  color: inherit;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-family: inherit;
  font-size: 0.75rem;
  font-weight: var(--font-bold);
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-letter-spacing: 0.025rem;
  -moz-letter-spacing: 0.025rem;
  -ms-letter-spacing: 0.025rem;
  letter-spacing: 0.025rem;
  line-height: 1rem;
  min-height: var(--size-2x);
  min-width: 2rem;
  outline: none;
  padding: 0 var(--spacing-2x);
  text-transform: uppercase;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c2 {
  outline: 2px solid transparent;
  outline-offset: -2px;
}

.c2:focus {
  box-shadow: 0 0 0 2px #006296;
  outline: 2px solid #84C6EA;
  outline-offset: -2px;
}

.c2 > svg {
  color: inherit;
  height: var(--size-1x);
  width: var(--size-1x);
}

.c1 {
  background-color: #006296;
  border-color: #006296;
  color: #FFFFFF;
  padding: 0;
  width: var(--size-2x);
}

.c1 {
  outline: 2px solid transparent;
  outline-offset: -2px;
}

.c1:focus {
  box-shadow: 0 0 0 2px #006296;
  outline: 2px solid #84C6EA;
  outline-offset: -2px;
}

.c1:hover,
.c1[aria-expanded='true'] {
  background-color: #003A5A;
  border-color: #003A5A;
  color: #FFFFFF;
}

.c1[aria-disabled='true'] {
  background-color: #84C6EA;
  border-color: #84C6EA;
  color: #FFFFFF;
  cursor: not-allowed;
}

.c1 > svg {
  height: var(--size-1x);
  width: var(--size-1x);
}

.c3 {
  background-color: #FFFFFF;
  border: 0;
  border-radius: var(--border-radius);
  box-shadow: 0 10px 20px 0 rgb(0 0 0 / 0.2);
  color: #1B1C1E;
  display: none;
  position: absolute;
  z-index: 700;
}

.c0 {
  position: relative;
}

<Disclosure
  buttonProps={
    {
      "buttonType": "primary",
      "iconName": "home",
      "label": "disclose content",
    }
  }
>
  <styled.div>
    <div
      className="c0"
    >
      <IconButton
        aria-controls="idContent"
        aria-expanded={false}
        buttonType="primary"
        iconName="home"
        label="disclose content"
        onBlur={[Function]}
        onClick={[Function]}
      >
        <Styled(AbstractButton)
          aria-controls="idContent"
          aria-expanded={false}
          aria-label="disclose content"
          buttonType="primary"
          focusable={true}
          isMobile={false}
          onBlur={[Function]}
          onClick={[Function]}
          size="medium"
          type="submit"
        >
          <AbstractButton
            aria-controls="idContent"
            aria-expanded={false}
            aria-label="disclose content"
            buttonType="primary"
            className="c1"
            focusable={true}
            isMobile={false}
            onBlur={[Function]}
            onClick={[Function]}
            size="medium"
            type="submit"
          >
            <styled.button
              $focusable={true}
              aria-controls="idContent"
              aria-expanded={false}
              aria-label="disclose content"
              buttonType="primary"
              className="c1"
              isMobile={false}
              onBlur={[Function]}
              onClick={[Function]}
              size="medium"
              type="submit"
            >
              <button
                aria-controls="idContent"
                aria-expanded={false}
                aria-label="disclose content"
                className="c2 c1"
                onBlur={[Function]}
                onClick={[Function]}
                size="medium"
                type="submit"
              >
                <Icon
                  aria-hidden="true"
                  name="home"
                  size="16"
                >
                  <svg
                    aria-hidden="true"
                    color="currentColor"
                    focusable={false}
                    height="16"
                    width="16"
                  />
                </Icon>
              </button>
            </styled.button>
          </AbstractButton>
        </Styled(AbstractButton)>
      </IconButton>
      <styled.div
        $expanded={false}
        id="idContent"
      >
        <div
          className="c3"
          id="idContent"
        >
          content
        </div>
      </styled.div>
    </div>
  </styled.div>
</Disclosure>
`;

exports[`Disclosure IconButton matches the snapshot when expanded 1`] = `
.c2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: inherit;
  border: 1px solid;
  border-radius: 1.5rem;
  box-sizing: border-box;
  color: inherit;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-family: inherit;
  font-size: 0.75rem;
  font-weight: var(--font-bold);
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-letter-spacing: 0.025rem;
  -moz-letter-spacing: 0.025rem;
  -ms-letter-spacing: 0.025rem;
  letter-spacing: 0.025rem;
  line-height: 1rem;
  min-height: var(--size-2x);
  min-width: 2rem;
  outline: none;
  padding: 0 var(--spacing-2x);
  text-transform: uppercase;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c2 {
  outline: 2px solid transparent;
  outline-offset: -2px;
}

.c2:focus {
  box-shadow: 0 0 0 2px #006296;
  outline: 2px solid #84C6EA;
  outline-offset: -2px;
}

.c2 > svg {
  color: inherit;
  height: var(--size-1x);
  width: var(--size-1x);
}

.c1 {
  background-color: #006296;
  border-color: #006296;
  color: #FFFFFF;
  padding: 0;
  width: var(--size-2x);
}

.c1 {
  outline: 2px solid transparent;
  outline-offset: -2px;
}

.c1:focus {
  box-shadow: 0 0 0 2px #006296;
  outline: 2px solid #84C6EA;
  outline-offset: -2px;
}

.c1:hover,
.c1[aria-expanded='true'] {
  background-color: #003A5A;
  border-color: #003A5A;
  color: #FFFFFF;
}

.c1[aria-disabled='true'] {
  background-color: #84C6EA;
  border-color: #84C6EA;
  color: #FFFFFF;
  cursor: not-allowed;
}

.c1 > svg {
  height: var(--size-1x);
  width: var(--size-1x);
}

.c3 {
  background-color: #FFFFFF;
  border: 1px solid #878F9A;
  border-radius: var(--border-radius);
  box-shadow: 0 10px 20px 0 rgb(0 0 0 / 0.2);
  color: #1B1C1E;
  display: block;
  position: absolute;
  z-index: 700;
}

.c0 {
  position: relative;
}

<Disclosure
  buttonProps={
    {
      "buttonType": "primary",
      "iconName": "home",
      "label": "disclose content",
    }
  }
>
  <styled.div>
    <div
      className="c0"
    >
      <IconButton
        aria-controls="idContent"
        aria-expanded={true}
        buttonType="primary"
        iconName="home"
        label="disclose content"
        onBlur={[Function]}
        onClick={[Function]}
      >
        <Styled(AbstractButton)
          aria-controls="idContent"
          aria-expanded={true}
          aria-label="disclose content"
          buttonType="primary"
          focusable={true}
          isMobile={false}
          onBlur={[Function]}
          onClick={[Function]}
          size="medium"
          type="submit"
        >
          <AbstractButton
            aria-controls="idContent"
            aria-expanded={true}
            aria-label="disclose content"
            buttonType="primary"
            className="c1"
            focusable={true}
            isMobile={false}
            onBlur={[Function]}
            onClick={[Function]}
            size="medium"
            type="submit"
          >
            <styled.button
              $focusable={true}
              aria-controls="idContent"
              aria-expanded={true}
              aria-label="disclose content"
              buttonType="primary"
              className="c1"
              isMobile={false}
              onBlur={[Function]}
              onClick={[Function]}
              size="medium"
              type="submit"
            >
              <button
                aria-controls="idContent"
                aria-expanded={true}
                aria-label="disclose content"
                className="c2 c1"
                onBlur={[Function]}
                onClick={[Function]}
                size="medium"
                type="submit"
              >
                <Icon
                  aria-hidden="true"
                  name="home"
                  size="16"
                >
                  <svg
                    aria-hidden="true"
                    color="currentColor"
                    focusable={false}
                    height="16"
                    width="16"
                  />
                </Icon>
              </button>
            </styled.button>
          </AbstractButton>
        </Styled(AbstractButton)>
      </IconButton>
      <styled.div
        $expanded={true}
        id="idContent"
      >
        <div
          className="c3"
          id="idContent"
        >
          content
        </div>
      </styled.div>
    </div>
  </styled.div>
</Disclosure>
`;
