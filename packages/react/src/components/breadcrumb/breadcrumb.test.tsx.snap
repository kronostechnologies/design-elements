// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Breadcrumb Snapshots Matches snapshot (Three or more entries) 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c4 {
  box-sizing: border-box;
  position: fixed;
  z-index: 100000;
  bottom: var(--spacing-2x);
  right: var(--spacing-2x);
}

.c2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: var(--border-radius);
  color: #006296;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 0.875rem;
  line-height: 1.5rem;
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c2:hover {
  color: #003A5A;
}

.c2:visited {
  color: #602FA0;
}

.c2 {
  outline: 2px solid transparent;
  outline-offset: -2px;
  -webkit-transition: outline .25s ease-in-out,box-shadow .25s ease-in-out;
  transition: outline .25s ease-in-out,box-shadow .25s ease-in-out;
}

.c2:focus-visible {
  box-shadow: 0 0 0 2px #006296;
  outline: 2px solid #84C6EA;
  outline-offset: -2px;
  -webkit-transition: outline .25s ease-in-out,box-shadow .25s ease-in-out;
  transition: outline .25s ease-in-out,box-shadow .25s ease-in-out;
}

.c3 svg {
  height: 1rem;
  margin-right: var(--spacing-1x);
  width: 1rem;
}

.c3:visited svg {
  color: #602FA0;
}

.c3[disabled] {
  pointer-events: none;
}

.c0 {
  margin: 0;
  max-width: 100%;
  padding: 0;
  white-space: nowrap;
}

.c1 {
  display: inline-block;
  position: relative;
}

.c1 > a {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c1:not(:last-child)::after {
  content: '/';
  margin: 0 var(--spacing-1x);
}

<body>
    <div>
      <nav
        aria-label="breadcrumb"
      >
        <ol
          class="c0"
        >
          <li
            class="c1"
          >
            <a
              class="c2 c3"
              href="/index"
              tabindex="0"
            >
              HOME
            </a>
          </li>
          <li
            class="c1"
          >
            <a
              class="c2 c3"
              href="/route"
              tabindex="0"
            >
              ROUTE
            </a>
          </li>
          <li
            class="c1"
          >
            THREE
          </li>
        </ol>
      </nav>
    </div>
    <div
      class="c4"
      data-testid="toasts"
    />
  </body>,
  "container": .c2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: var(--border-radius);
  color: #006296;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 0.875rem;
  line-height: 1.5rem;
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c2:hover {
  color: #003A5A;
}

.c2:visited {
  color: #602FA0;
}

.c2 {
  outline: 2px solid transparent;
  outline-offset: -2px;
  -webkit-transition: outline .25s ease-in-out,box-shadow .25s ease-in-out;
  transition: outline .25s ease-in-out,box-shadow .25s ease-in-out;
}

.c2:focus-visible {
  box-shadow: 0 0 0 2px #006296;
  outline: 2px solid #84C6EA;
  outline-offset: -2px;
  -webkit-transition: outline .25s ease-in-out,box-shadow .25s ease-in-out;
  transition: outline .25s ease-in-out,box-shadow .25s ease-in-out;
}

.c3 svg {
  height: 1rem;
  margin-right: var(--spacing-1x);
  width: 1rem;
}

.c3:visited svg {
  color: #602FA0;
}

.c3[disabled] {
  pointer-events: none;
}

.c0 {
  margin: 0;
  max-width: 100%;
  padding: 0;
  white-space: nowrap;
}

.c1 {
  display: inline-block;
  position: relative;
}

.c1 > a {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c1:not(:last-child)::after {
  content: '/';
  margin: 0 var(--spacing-1x);
}

<div>
    <nav
      aria-label="breadcrumb"
    >
      <ol
        class="c0"
      >
        <li
          class="c1"
        >
          <a
            class="c2 c3"
            href="/index"
            tabindex="0"
          >
            HOME
          </a>
        </li>
        <li
          class="c1"
        >
          <a
            class="c2 c3"
            href="/route"
            tabindex="0"
          >
            ROUTE
          </a>
        </li>
        <li
          class="c1"
        >
          THREE
        </li>
      </ol>
    </nav>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Breadcrumb Snapshots Matches snapshot (double entries) 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c4 {
  box-sizing: border-box;
  position: fixed;
  z-index: 100000;
  bottom: var(--spacing-2x);
  right: var(--spacing-2x);
}

.c2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: var(--border-radius);
  color: #006296;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 0.875rem;
  line-height: 1.5rem;
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c2:hover {
  color: #003A5A;
}

.c2:visited {
  color: #602FA0;
}

.c2 {
  outline: 2px solid transparent;
  outline-offset: -2px;
  -webkit-transition: outline .25s ease-in-out,box-shadow .25s ease-in-out;
  transition: outline .25s ease-in-out,box-shadow .25s ease-in-out;
}

.c2:focus-visible {
  box-shadow: 0 0 0 2px #006296;
  outline: 2px solid #84C6EA;
  outline-offset: -2px;
  -webkit-transition: outline .25s ease-in-out,box-shadow .25s ease-in-out;
  transition: outline .25s ease-in-out,box-shadow .25s ease-in-out;
}

.c3 svg {
  height: 1rem;
  margin-right: var(--spacing-1x);
  width: 1rem;
}

.c3:visited svg {
  color: #602FA0;
}

.c3[disabled] {
  pointer-events: none;
}

.c0 {
  margin: 0;
  max-width: 100%;
  padding: 0;
  white-space: nowrap;
}

.c1 {
  display: inline-block;
  position: relative;
}

.c1 > a {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c1:not(:last-child)::after {
  content: '/';
  margin: 0 var(--spacing-1x);
}

<body>
    <div>
      <nav
        aria-label="breadcrumb"
      >
        <ol
          class="c0"
        >
          <li
            class="c1"
          >
            <a
              class="c2 c3"
              href="/index"
              tabindex="0"
            >
              HOME
            </a>
          </li>
          <li
            class="c1"
          >
            ROUTE
          </li>
        </ol>
      </nav>
    </div>
    <div
      class="c4"
      data-testid="toasts"
    />
  </body>,
  "container": .c2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: var(--border-radius);
  color: #006296;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 0.875rem;
  line-height: 1.5rem;
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c2:hover {
  color: #003A5A;
}

.c2:visited {
  color: #602FA0;
}

.c2 {
  outline: 2px solid transparent;
  outline-offset: -2px;
  -webkit-transition: outline .25s ease-in-out,box-shadow .25s ease-in-out;
  transition: outline .25s ease-in-out,box-shadow .25s ease-in-out;
}

.c2:focus-visible {
  box-shadow: 0 0 0 2px #006296;
  outline: 2px solid #84C6EA;
  outline-offset: -2px;
  -webkit-transition: outline .25s ease-in-out,box-shadow .25s ease-in-out;
  transition: outline .25s ease-in-out,box-shadow .25s ease-in-out;
}

.c3 svg {
  height: 1rem;
  margin-right: var(--spacing-1x);
  width: 1rem;
}

.c3:visited svg {
  color: #602FA0;
}

.c3[disabled] {
  pointer-events: none;
}

.c0 {
  margin: 0;
  max-width: 100%;
  padding: 0;
  white-space: nowrap;
}

.c1 {
  display: inline-block;
  position: relative;
}

.c1 > a {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c1:not(:last-child)::after {
  content: '/';
  margin: 0 var(--spacing-1x);
}

<div>
    <nav
      aria-label="breadcrumb"
    >
      <ol
        class="c0"
      >
        <li
          class="c1"
        >
          <a
            class="c2 c3"
            href="/index"
            tabindex="0"
          >
            HOME
          </a>
        </li>
        <li
          class="c1"
        >
          ROUTE
        </li>
      </ol>
    </nav>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Breadcrumb Snapshots Matches snapshot (single entry) 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c2 {
  box-sizing: border-box;
  position: fixed;
  z-index: 100000;
  bottom: var(--spacing-2x);
  right: var(--spacing-2x);
}

.c0 {
  margin: 0;
  max-width: 100%;
  padding: 0;
  white-space: nowrap;
}

.c1 {
  display: inline-block;
  position: relative;
}

.c1 > a {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c1:not(:last-child)::after {
  content: '/';
  margin: 0 var(--spacing-1x);
}

<body>
    <div>
      <nav
        aria-label="breadcrumb"
      >
        <ol
          class="c0"
        >
          <li
            class="c1"
          >
            HOME
          </li>
        </ol>
      </nav>
    </div>
    <div
      class="c2"
      data-testid="toasts"
    />
  </body>,
  "container": .c0 {
  margin: 0;
  max-width: 100%;
  padding: 0;
  white-space: nowrap;
}

.c1 {
  display: inline-block;
  position: relative;
}

.c1 > a {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c1:not(:last-child)::after {
  content: '/';
  margin: 0 var(--spacing-1x);
}

<div>
    <nav
      aria-label="breadcrumb"
    >
      <ol
        class="c0"
      >
        <li
          class="c1"
        >
          HOME
        </li>
      </ol>
    </nav>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
