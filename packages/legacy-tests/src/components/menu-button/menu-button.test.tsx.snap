// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`MenuButton should render a tooltip when the tooltip prop is provided 1`] = `
.c3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: inherit;
  border: 1px solid;
  border-radius: 1.5rem;
  box-sizing: border-box;
  color: inherit;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-family: inherit;
  font-size: 0.75rem;
  font-weight: var(--font-bold);
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-letter-spacing: 0.025rem;
  -moz-letter-spacing: 0.025rem;
  -ms-letter-spacing: 0.025rem;
  letter-spacing: 0.025rem;
  line-height: 1rem;
  min-height: var(--size-2x);
  min-width: 2rem;
  outline: none;
  padding: 0 var(--spacing-2x);
  text-transform: uppercase;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c3:focus-visible {
  box-shadow: 0 0 0 2px #006296;
  outline: 2px solid #84C6EA;
  outline-offset: -2px;
}

.c3 > svg {
  height: var(--size-1x);
  width: var(--size-1x);
}

.c2 {
  background-color: #006296;
  border-color: #006296;
  color: #FFFFFF;
}

.c2:focus-visible {
  box-shadow: 0 0 0 2px #006296;
  outline: 2px solid #84C6EA;
  outline-offset: -2px;
}

.c2:hover,
.c2[aria-expanded='true'] {
  background-color: #003A5A;
  border-color: #003A5A;
  color: #FFFFFF;
}

.c2[aria-disabled='true'] {
  background-color: #84C6EA;
  border-color: #84C6EA;
  color: #FFFFFF;
  cursor: not-allowed;
  pointer-events: none;
}

.c7 {
  height: 1.25rem;
  position: absolute;
  width: 1rem;
}

.c7::before {
  border-style: solid;
  content: '';
  display: block;
  height: 0;
  margin: auto;
  width: 0;
}

.c7::after {
  border-style: solid;
  content: '';
  display: block;
  height: 0;
  margin: auto;
  position: absolute;
  width: 0;
}

.c5 {
  background-color: #60666E;
  border: 1px solid #FFFFFF;
  border-radius: var(--border-radius-half);
  box-shadow: 0 10px 20px 0 rgb(0 0 0 / 19%);
  box-sizing: border-box;
  color: #FFFFFF;
  display: none;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  font-size: 0.75rem;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  line-height: 1.25rem;
  margin: 0;
  max-width: 327px;
  min-height: 24px;
  padding: 1px var(--spacing-1x);
  -webkit-transition: opacity 300ms;
  transition: opacity 300ms;
  z-index: 1000;
}

.c5[data-popper-placement*="bottom"] > .c6 {
  height: 1rem;
  left: 0;
  margin-top: -0.375rem;
  top: 0;
  width: 1rem;
}

.c5[data-popper-placement*="bottom"] > .c6::before {
  border-color: transparent transparent #FFFFFF transparent;
  border-width: 0 0.5rem 0.5rem;
  position: absolute;
  top: -2px;
}

.c5[data-popper-placement*="bottom"] > .c6::after {
  border-color: transparent transparent #60666E transparent;
  border-width: 0 0.5rem 0.5rem;
}

.c5[data-popper-placement*="top"] > .c6 {
  bottom: 0;
  height: 0;
  left: 0;
  margin-bottom: 0;
  width: 1rem;
}

.c5[data-popper-placement*="top"] > .c6::before {
  border-color: #FFFFFF transparent transparent transparent;
  border-width: 0.5rem 0.5rem 0;
  position: absolute;
  top: 0;
}

.c5[data-popper-placement*="top"] > .c6::after {
  border-color: #60666E transparent transparent transparent;
  border-width: 0.5rem 0.5rem 0;
  top: -0.1rem;
}

.c5[data-popper-placement*="right"] > .c6 {
  height: 1rem;
  left: 0;
  margin-left: -0.8rem;
  width: 1rem;
}

.c5[data-popper-placement*="right"] > .c6::before {
  border-color: transparent #FFFFFF transparent transparent;
  border-width: 0.5rem 0.5rem 0.5rem 0;
}

.c5[data-popper-placement*="right"] > .c6::after {
  border-color: transparent #60666E transparent transparent;
  border-width: 0.5rem 0.5rem 0.5rem 0;
  left: 0.375rem;
  top: 0;
}

.c5[data-popper-placement*="left"] > .c6 {
  height: 1rem;
  margin-right: -0.7rem;
  right: -1px;
  width: 1rem;
}

.c5[data-popper-placement*="left"] > .c6::before {
  border-color: transparent transparent transparent #FFFFFF;
  border-width: 0.5rem 0 0.5rem 0.5rem;
}

.c5[data-popper-placement*="left"] > .c6::after {
  border-color: transparent transparent transparent #60666E;
  border-width: 0.5rem 0 0.5rem 0.5rem;
  left: 0.17rem;
  top: 0;
}

.c8 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}

.c1:focus-visible {
  box-shadow: 0 0 0 2px #006296;
  outline: 2px solid #84C6EA;
  outline-offset: -2px;
}

.c0 {
  position: relative;
}

.c4 {
  margin-left: var(--spacing-1x);
}

<MenuButton
  buttonType="primary"
  options={
    [
      {
        "label": "Option 1",
        "onClick": [MockFunction],
      },
      {
        "label": "Option 2",
        "onClick": [MockFunction],
      },
      {
        "label": "Option 3",
        "onClick": [MockFunction],
      },
    ]
  }
  tooltip={
    {
      "label": "Tooltip text",
      "placement": "top",
    }
  }
>
  <styled.div
    onKeyDown={[Function]}
  >
    <div
      className="c0"
      onKeyDown={[Function]}
    >
      <Tooltip
        label="Tooltip text"
        placement="top"
      >
        <styled.span
          data-testid="tooltip"
          id="tooltip-trigger-uuid1"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          tabIndex={-1}
        >
          <span
            className="c1"
            data-testid="tooltip"
            id="tooltip-trigger-uuid1"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            tabIndex={-1}
          >
            <Button
              aria-describedby="uuid1"
              aria-expanded={false}
              aria-haspopup="menu"
              buttonType="primary"
              data-testid="menu-button"
              onClick={[Function]}
              type="button"
            >
              <Styled(AbstractButton)
                aria-describedby="uuid1"
                aria-expanded={false}
                aria-haspopup="menu"
                buttonType="primary"
                data-testid="menu-button"
                focusable={true}
                isMobile={false}
                onClick={[Function]}
                onKeyDown={[Function]}
                type="button"
              >
                <AbstractButton
                  aria-describedby="uuid1"
                  aria-expanded={false}
                  aria-haspopup="menu"
                  buttonType="primary"
                  className="c2"
                  data-testid="menu-button"
                  focusable={true}
                  isMobile={false}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  type="button"
                >
                  <styled.button
                    $focusable={true}
                    $isMobile={false}
                    aria-describedby="uuid1"
                    aria-expanded={false}
                    aria-haspopup="menu"
                    buttonType="primary"
                    className="c2"
                    data-testid="menu-button"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    type="button"
                  >
                    <button
                      aria-describedby="uuid1"
                      aria-expanded={false}
                      aria-haspopup="menu"
                      className="c3 c2"
                      data-testid="menu-button"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      type="button"
                    >
                      Test
                      <Styled(Icon)
                        aria-hidden="true"
                        data-testid="chevron-icon"
                        name="chevronDown"
                        size="16"
                      >
                        <Icon
                          aria-hidden="true"
                          className="c4"
                          data-testid="chevron-icon"
                          name="chevronDown"
                          size="16"
                        >
                          <svg
                            aria-hidden="true"
                            className="c4"
                            color="currentColor"
                            data-testid="chevron-icon"
                            focusable={false}
                            height="16"
                            width="16"
                          />
                        </Icon>
                      </Styled(Icon)>
                    </button>
                  </styled.button>
                </AbstractButton>
              </Styled(AbstractButton)>
            </Button>
          </span>
        </styled.span>
        <styled.div
          aria-hidden={true}
          data-popper-interactive={false}
          data-testid="tooltip-content-container"
          id="uuid1"
          isMobile={false}
          role="tooltip"
          style={
            {
              "left": "0",
              "position": "absolute",
              "top": "0",
            }
          }
          variant="normal"
          visible={false}
        >
          <div
            aria-hidden={true}
            className="c5"
            data-popper-interactive={false}
            data-testid="tooltip-content-container"
            id="uuid1"
            role="tooltip"
            style={
              {
                "left": "0",
                "position": "absolute",
                "top": "0",
              }
            }
          >
            <styled.div
              data-popper-arrow={true}
              style={
                {
                  "position": "absolute",
                }
              }
            >
              <div
                className="c6 c7"
                data-popper-arrow={true}
                style={
                  {
                    "position": "absolute",
                  }
                }
              />
            </styled.div>
            <styled.div>
              <div
                className="c8"
              >
                Tooltip text
              </div>
            </styled.div>
          </div>
        </styled.div>
      </Tooltip>
    </div>
  </styled.div>
</MenuButton>
`;
