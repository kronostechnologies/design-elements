{"version":3,"file":"dropdown-list-mdx.6e3fcc49.iframe.bundle.js","mappings":";;AAqBA","sources":["webpack://@equisoft/design-elements-storybook/./stories/dropdown-list.stories.tsx"],"sourcesContent":["import { DropdownList, DropdownListOption } from '@equisoft/design-elements-react';\nimport { Meta, StoryObj } from '@storybook/react';\nimport styled from 'styled-components';\nimport { decorateWith } from './utils/decorator';\nimport { rawCodeParameters } from './utils/parameters';\n\nconst Container = styled.div`\n    height: 260px;\n`;\n\nconst longLabel = 'This is option 1, with a very long label that should allow some wrapping in the listbox, '\n    + 'while showcasing an ellipsis in the textbox when selected (you may have to resize your browser window)'\n    + 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'\n    + 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'\n    + 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'\n    + 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'\n    + 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'\n    + 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'\n    + 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'\n    + 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.';\n\nconst provinces = [\n    { value: 'ab', label: 'Alberta' },\n    { value: 'bc', label: 'British Columbia' },\n    { value: 'mb', label: 'Manitoba', disabled: true },\n    { value: 'nb', label: 'New Brunswick' },\n    { value: 'nl', label: 'Newfoundland and Labrador' },\n    { value: 'nt', label: 'Northwest Territories' },\n    { value: 'ns', label: 'Nova Scotia' },\n    { value: 'nu', label: 'Nunavut' },\n    { value: 'on', label: 'Ontario', disabled: true },\n    { value: 'pe', label: 'Prince Edward Island' },\n    { value: 'qc', label: 'Quebec' },\n    { value: 'sk', label: 'Saskatchewan' },\n    { value: 'yt', label: 'Yukon' },\n    { value: 'long', label: longLabel },\n];\n\nconst DropdownListMeta: Meta<typeof DropdownList> = {\n    title: 'Components/Dropdown List',\n    component: DropdownList,\n    decorators: [decorateWith(Container)],\n    args: {\n        label: 'Select an option',\n        hint: 'Hint',\n        tooltip: { label: 'This is a tooltip.' },\n    },\n    argTypes: {\n        options: {\n            control: { disable: true },\n        },\n        onChange: {\n            control: { disable: true },\n        },\n        tooltip: {\n            control: { disable: true },\n        },\n    },\n    render: (args) => (\n        <DropdownList\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...args}\n            data-testid=\"some-data-test-id\"\n            options={provinces}\n        />\n    ),\n};\n\nexport default DropdownListMeta;\ntype Story = StoryObj<typeof DropdownList>;\n\nexport const Default: Story = {\n    ...DropdownListMeta,\n};\n\nexport const MultiSelect: Story = {\n    ...DropdownListMeta,\n    args: {\n        label: 'Select multiple options',\n        multiselect: true,\n    },\n};\n\nexport const MultiSelectWithMaximumOfSelectableOptions: Story = {\n    ...DropdownListMeta,\n    args: {\n        label: 'Select multiple options with a maximum of selectable options',\n        multiselect: true,\n        maxSelectableOptions: 2,\n    },\n};\n\nexport const WithIcon: Story = {\n    ...DropdownListMeta,\n    args: {\n        label: 'Select multiple options',\n        iconName: 'home',\n    },\n};\n\nexport const WithCallback: Story = {\n    ...DropdownListMeta,\n    args: {\n        label: 'Select an option',\n        onChange: (option: DropdownListOption) => console.info(`Label: ${option.label} | Value: ${option.value}`),\n        onClose: () => console.info('onClose event triggered'),\n    },\n};\nWithCallback.parameters = rawCodeParameters;\n\nexport const WithToggletip: Story = {\n    ...DropdownListMeta,\n    args: {\n        tooltip: undefined,\n        toggletip: {\n            label: 'Toggletip label',\n            children: 'Toggletip content',\n        },\n    },\n};\n"],"names":[],"sourceRoot":""}