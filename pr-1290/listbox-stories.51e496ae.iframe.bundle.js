"use strict";(self.webpackChunk_equisoft_design_elements_storybook=self.webpackChunk_equisoft_design_elements_storybook||[]).push([[8386],{"./stories/listbox.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Multiselect:()=>Multiselect,Normal:()=>Normal,WithCallbacks:()=>WithCallbacks,WithCaptions:()=>WithCaptions,WithControlledValue:()=>WithControlledValue,WithDefaultValue:()=>WithDefaultValue,WithDisabledOptions:()=>WithDisabledOptions,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../react/dist/bundle.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/index.js"),styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Core/Listbox (core)",component:_equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__.Listbox,tags:["autodocs"]},options=[{label:"Option A",value:"optionA"},{label:"Option B",value:"optionB"},{label:"Option C",value:"optionC"},{label:"Option D",value:"optionD",disabled:!0},{label:"Option E",value:"optionE"},{label:"Option F",value:"optionF"},{label:"Option G",value:"optionG"}],Normal=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__.Listbox,{options}),WithDefaultValue=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__.Listbox,{defaultValue:"optionF",options}),WithCaptions=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__.Listbox,{options:[{label:"Option A",value:"optionA",caption:"The first one"},{label:"Option B",value:"optionB",caption:"Why not this one?"},{label:"Option C",value:"optionC",caption:"This one is also an option"}]}),WithDisabledOptions=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__.Listbox,{options:[{label:"Option A",value:"optionA"},{label:"Option B",value:"optionB",disabled:!0},{label:"Option C",value:"optionC",disabled:!0},{label:"Option D",value:"optionD"}]}),StyledButton=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.default)(_equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__.Button)`
    margin-top: 1rem;
`,WithControlledValue=()=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(void 0);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__.Listbox,{options,onChange:function handleChange(option){setValue(option.value)},value}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(StyledButton,{buttonType:"primary",onClick:()=>setValue("optionC"),children:"Set value to Option C"})]})},WithCallbacks=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__.Listbox,{options,onFocusChange:option=>console.info("onFocusChange",option),onChange:option=>console.info("onChange",option)}),Multiselect=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__.Listbox,{defaultValue:["optionA","optionC"],multiselect:!0,options}),__namedExportsOrder=["Normal","WithDefaultValue","WithCaptions","WithDisabledOptions","WithControlledValue","WithCallbacks","Multiselect"];Normal.parameters={...Normal.parameters,docs:{...Normal.parameters?.docs,source:{originalSource:"() => <Listbox options={options} />",...Normal.parameters?.docs?.source}}},WithDefaultValue.parameters={...WithDefaultValue.parameters,docs:{...WithDefaultValue.parameters?.docs,source:{originalSource:'() => <Listbox defaultValue="optionF" options={options} />',...WithDefaultValue.parameters?.docs?.source}}},WithCaptions.parameters={...WithCaptions.parameters,docs:{...WithCaptions.parameters?.docs,source:{originalSource:"() => {\n  const optionsWithCaptions = [{\n    label: 'Option A',\n    value: 'optionA',\n    caption: 'The first one'\n  }, {\n    label: 'Option B',\n    value: 'optionB',\n    caption: 'Why not this one?'\n  }, {\n    label: 'Option C',\n    value: 'optionC',\n    caption: 'This one is also an option'\n  }];\n  return <Listbox options={optionsWithCaptions} />;\n}",...WithCaptions.parameters?.docs?.source}}},WithDisabledOptions.parameters={...WithDisabledOptions.parameters,docs:{...WithDisabledOptions.parameters?.docs,source:{originalSource:"() => {\n  const disabledOptions = [{\n    label: 'Option A',\n    value: 'optionA'\n  }, {\n    label: 'Option B',\n    value: 'optionB',\n    disabled: true\n  }, {\n    label: 'Option C',\n    value: 'optionC',\n    disabled: true\n  }, {\n    label: 'Option D',\n    value: 'optionD'\n  }];\n  return <Listbox options={disabledOptions} />;\n}",...WithDisabledOptions.parameters?.docs?.source}}},WithControlledValue.parameters={...WithControlledValue.parameters,docs:{...WithControlledValue.parameters?.docs,source:{originalSource:"() => {\n  const [value, setValue] = useState<string | undefined>(undefined);\n  function handleChange(option: ListboxOption): void {\n    setValue(option.value);\n  }\n  return <>\n            <Listbox options={options} onChange={handleChange} value={value} />\n            <StyledButton buttonType=\"primary\" onClick={() => setValue('optionC')}>\n                Set value to Option C\n            </StyledButton>\n        </>;\n}",...WithControlledValue.parameters?.docs?.source}}},WithCallbacks.parameters={...WithCallbacks.parameters,docs:{...WithCallbacks.parameters?.docs,source:{originalSource:"() => <Listbox options={options} onFocusChange={option => console.info('onFocusChange', option)} onChange={option => console.info('onChange', option)} />",...WithCallbacks.parameters?.docs?.source}}},Multiselect.parameters={...Multiselect.parameters,docs:{...Multiselect.parameters?.docs,source:{originalSource:"() => <Listbox defaultValue={['optionA', 'optionC']} multiselect options={options} />",...Multiselect.parameters?.docs?.source}}};try{Listbox.displayName="Listbox",Listbox.__docgenInfo={description:"",displayName:"Listbox",props:{ariaLabelledBy:{defaultValue:null,description:"",name:"ariaLabelledBy",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},options:{defaultValue:null,description:"",name:"options",required:!0,type:{name:"ListboxOption[]"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},containerRef:{defaultValue:null,description:"",name:"containerRef",required:!1,type:{name:"RefObject<HTMLElement>"}},defaultValue:{defaultValue:null,description:"The default selected option. You may specify an array of strings when using multiselect feature.",name:"defaultValue",required:!1,type:{name:"Value"}},focusable:{defaultValue:{value:"true"},description:"Set to false to prevent the listbox from receiving focus",name:"focusable",required:!1,type:{name:"boolean"}},keyboardNav:{defaultValue:{value:"false"},description:"Set to true to enable keyboard navigation managed by the listbox",name:"keyboardNav",required:!1,type:{name:"boolean"}},multiselect:{defaultValue:{value:"false"},description:"Activates multiple selection feature",name:"multiselect",required:!1,type:{name:"boolean"}},focusedValue:{defaultValue:null,description:"Sets the current focused element in the listbox",name:"focusedValue",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"Sets the selected value (controlled input)",name:"value",required:!1,type:{name:"Value"}},onChange:{defaultValue:null,description:"Callback function, invoked when an option is selected",name:"onChange",required:!1,type:{name:"((options: ListboxOption | ListboxOption[]) => void)"}},onKeyDown:{defaultValue:null,description:"Callback function, invoked when a key is pressed",name:"onKeyDown",required:!1,type:{name:"((event: KeyboardEvent<Element>) => void)"}},onFocusChange:{defaultValue:null,description:"Callback function, invoked when focused value changes",name:"onFocusChange",required:!1,type:{name:"((option?: ListboxOption) => void)"}},onOptionClick:{defaultValue:null,description:"Callback function, invoked when an option is clicked",name:"onOptionClick",required:!1,type:{name:"((option?: ListboxOption) => void)"}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",name:"ref",required:!1,type:{name:"LegacyRef<ListboxRef>"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key | null"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/listbox.stories.tsx#Listbox"]={docgenInfo:Listbox.__docgenInfo,name:"Listbox",path:"stories/listbox.stories.tsx#Listbox"})}catch(__react_docgen_typescript_loader_error){}}}]);
//# sourceMappingURL=listbox-stories.51e496ae.iframe.bundle.js.map