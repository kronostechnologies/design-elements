"use strict";(self.webpackChunk_equisoft_design_elements_storybook=self.webpackChunk_equisoft_design_elements_storybook||[]).push([[1606],{"./stories/money-input.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{EnglishLocale:()=>EnglishLocale,FrenchLocale:()=>FrenchLocale,OnChangeCallback:()=>OnChangeCallback,WithControlledValue:()=>WithControlledValue,WithToggletip:()=>WithToggletip,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../react/dist/bundle.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const MoneyInputMeta={title:"Components/Money Input",component:_equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__.MoneyInput,args:{label:"Entrez un montant",hint:"Hint",locale:"fr-CA"},argTypes:{onChange:{control:{disable:!0}}},render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__.MoneyInput,{...args,"data-testid":"some-data-testid"})},__WEBPACK_DEFAULT_EXPORT__=MoneyInputMeta,FrenchLocale={...MoneyInputMeta},EnglishLocale={...MoneyInputMeta,args:{label:"Choose a number",locale:"en-CA"}},OnChangeCallback={...MoneyInputMeta,args:{onChange:(value,formattedValue)=>{console.info("value:",value),console.info("formattedValue: ",formattedValue)}}},WithControlledValue={...MoneyInputMeta,render:args=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),handleChange=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((newValue,formattedValue)=>{setValue(newValue),console.info({value:newValue,formattedValue})},[]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__.Button,{label:"+1",buttonType:"primary",onClick:()=>setValue((value||0)+1)}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__.MoneyInput,{...args,value,onChange:handleChange})]})}},WithToggletip={...MoneyInputMeta,args:{toggletip:{label:"Toggletip label",children:"Toggletip content"}}},__namedExportsOrder=["FrenchLocale","EnglishLocale","OnChangeCallback","WithControlledValue","WithToggletip"];FrenchLocale.parameters={...FrenchLocale.parameters,docs:{...FrenchLocale.parameters?.docs,source:{originalSource:"{\n  ...MoneyInputMeta\n}",...FrenchLocale.parameters?.docs?.source}}},EnglishLocale.parameters={...EnglishLocale.parameters,docs:{...EnglishLocale.parameters?.docs,source:{originalSource:"{\n  ...MoneyInputMeta,\n  args: {\n    label: 'Choose a number',\n    locale: 'en-CA'\n  }\n}",...EnglishLocale.parameters?.docs?.source}}},OnChangeCallback.parameters={...OnChangeCallback.parameters,docs:{...OnChangeCallback.parameters?.docs,source:{originalSource:"{\n  ...MoneyInputMeta,\n  args: {\n    onChange: (value, formattedValue) => {\n      console.info('value:', value);\n      console.info('formattedValue: ', formattedValue);\n    }\n  }\n}",...OnChangeCallback.parameters?.docs?.source}}},WithControlledValue.parameters={...WithControlledValue.parameters,docs:{...WithControlledValue.parameters?.docs,source:{originalSource:'{\n  ...MoneyInputMeta,\n  render: args => {\n    const [value, setValue] = useState<number | null>(null);\n    const handleChange: MoneyInputProps[\'onChange\'] = useCallback((newValue: number | null, formattedValue: string): void => {\n      setValue(newValue);\n      console.info({\n        value: newValue,\n        formattedValue\n      });\n    }, []);\n    return <>\n                <Button label="+1" buttonType="primary" onClick={() => setValue((value || 0) + 1)} />\n                {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n                <MoneyInput {...args} value={value} onChange={handleChange} />\n            </>;\n  }\n}',...WithControlledValue.parameters?.docs?.source}}},WithToggletip.parameters={...WithToggletip.parameters,docs:{...WithToggletip.parameters?.docs,source:{originalSource:"{\n  ...MoneyInputMeta,\n  args: {\n    toggletip: {\n      label: 'Toggletip label',\n      children: 'Toggletip content'\n    }\n  }\n}",...WithToggletip.parameters?.docs?.source}}}}}]);