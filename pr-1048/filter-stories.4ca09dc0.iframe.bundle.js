"use strict";(self.webpackChunk_equisoft_design_elements_storybook=self.webpackChunk_equisoft_design_elements_storybook||[]).push([[2801],{"./stories/filter.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../react/dist/bundle.js"),_utils_parameters__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./stories/utils/parameters.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Filter",component:_equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__.Filter,parameters:_utils_parameters__WEBPACK_IMPORTED_MODULE_1__.A},Default={render:()=>{const filter={key:"fruits",label:"Fruits",options:[{label:"all",value:"all"},{label:"banana",value:"banana"},{label:"kiwi",value:"kiwi"},{label:"strawberry",value:"strawberry"}],defaultOption:"all",filter:(row,option)=>row.name===option||"all"===option},{onFilterChange,filteredData}=(0,_equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__.useFilters)([{name:"banana"},{name:"kiwi"},{name:"strawberry"}],[filter]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__.Filter,{mode:"single-select",filter,onFilterChange}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("ul",{children:filteredData.map((row=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("li",{children:row.name})))})]})}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filter: FilterType<Data, any> = {\n      key: 'fruits',\n      label: 'Fruits',\n      options: [{\n        label: 'all',\n        value: 'all'\n      }, {\n        label: 'banana',\n        value: 'banana'\n      }, {\n        label: 'kiwi',\n        value: 'kiwi'\n      }, {\n        label: 'strawberry',\n        value: 'strawberry'\n      }],\n      defaultOption: 'all',\n      filter: (row: Data, option: string) => row.name === option || option === 'all'\n    };\n    const data: Data[] = [{\n      name: 'banana'\n    }, {\n      name: 'kiwi'\n    }, {\n      name: 'strawberry'\n    }];\n    const {\n      onFilterChange,\n      filteredData\n    } = useFilters<Data>(data, [filter]);\n    return <>\n                <Filter mode='single-select' filter={filter} onFilterChange={onFilterChange} />\n                <ul>\n                    {filteredData.map(row => <li>{row.name}</li>)}\n                </ul>\n            </>;\n  }\n}",...Default.parameters?.docs?.source}}}},"./stories/utils/parameters.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>rawCodeParameters});const rawCodeParameters={docs:{source:{type:"code"}}}}}]);