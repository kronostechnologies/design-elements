{"version":3,"file":"combobox-stories.ccd47555.iframe.bundle.js","mappings":";;AAWA","sources":["webpack://@equisoft/design-elements-storybook/./stories/combobox.stories.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Combobox, ComboboxOption } from '@equisoft/design-elements-react';\nimport { Meta, StoryObj } from '@storybook/react';\nimport styled from 'styled-components';\nimport { decorateWith } from './utils/decorator';\nimport { rawCodeParameters } from './utils/parameters';\n\nconst Container = styled.div`\n    height: 240px;\n`;\n\nconst provinces = [\n    { value: 'Alberta' },\n    { value: 'British Columbia' },\n    { value: 'Manitoba', disabled: true },\n    { value: 'New Brunswick' },\n    { value: 'Newfoundland and Labrador' },\n    { value: 'Northwest Territories' },\n    { value: 'Nova Scotia' },\n    { value: 'Nunavut' },\n    { value: 'Ontario', disabled: true },\n    { value: 'Prince Edward Island' },\n    { value: 'Quebec' },\n    { value: 'Saskatchewan' },\n    { value: 'Yukon' },\n];\n\nconst comboboxMeta: Meta<typeof Combobox> = {\n    title: 'Components/Combobox',\n    component: Combobox,\n    decorators: [decorateWith(Container)],\n    args: {\n        label: 'Select an option',\n        hint: 'Hint',\n        options: provinces,\n    },\n};\n\nexport default comboboxMeta;\ntype Story = StoryObj<typeof Combobox>;\n\nexport const Default: Story = {\n    ...comboboxMeta,\n    args: {\n        placeholder: 'Select the best province',\n    },\n};\n\nexport const CustomValue: Story = {\n    ...comboboxMeta,\n    args: {\n        allowCustomValue: true,\n    },\n};\n\nexport const WithCallback: Story = {\n    ...comboboxMeta,\n    args: {\n        onChange: (value: string) => console.log(value), /* eslint-disable-line no-console */\n    },\n    parameters: rawCodeParameters,\n};\n\nexport const UsingAsyncDataSource: Story = {\n    ...comboboxMeta,\n    render: (args) => {\n        const [options, setOptions] = useState<ComboboxOption[]>([]);\n        const [isLoading, setIsLoading] = useState(false);\n\n        function handleChange(newValue: string): void {\n            if (newValue === '') {\n                setOptions([]);\n                return;\n            }\n\n            setIsLoading(true);\n\n            setTimeout(() => {\n                setOptions(provinces.filter(({ value }) => value.toLowerCase().startsWith(newValue.toLowerCase())));\n                setIsLoading(false);\n            }, 500);\n        }\n\n        return (\n            <Combobox\n                {...args /* eslint-disable-line react/jsx-props-no-spreading */}\n                isLoading={isLoading}\n                options={options}\n                onChange={handleChange}\n            />\n        );\n    },\n};\n\nexport const WithToggletip: Story = {\n    ...comboboxMeta,\n    args: {\n        toggletip: {\n            label: 'Toggletip label',\n            children: 'Toggletip content',\n        },\n    },\n};\n"],"names":[],"sourceRoot":""}