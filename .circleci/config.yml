version: 2.1

variables:
  - &working_directory '~/design-elements'
  - &react_directory '~/design-elements/packages/react'
  - &storybook_directory '~/design-elements/packages/storybook'

executors:
  node:
    docker:
      - image: 'cimg/node:14.15.1'

orbs:
  eq: equisoft/build-tools@0.0.9

commands:
  attach_at_working_directory:
    steps:
      - attach_workspace:
          at: *working_directory

  node_deps_install:
    steps:
      - eq/with-yarn-cache:
          cache-version: 'v4'

  yarn_lint:
    parameters:
      directory:
        type: string
    steps:
      - run:
          command: |
            cd << parameters.directory >>
            yarn lint:ci
      - store_test_results:
          path: build/lint

  git_config:
    steps:
      - run: git config --global user.email "na-qc@equisoft.com" && git config --global user.name "circleci"

  git_pull_master:
    steps:
      - run:
          working_directory: *working_directory
          command: git pull origin master

  add_github_ssh_key:
    steps:
      - add_ssh_keys:
          fingerprints:
            - "a3:81:0b:19:67:3f:89:0a:e9:1b:1a:38:a6:02:0e:93"
      - run:
          working_directory: *working_directory
          command: ssh-keyscan -H github.com >> ~/.ssh/known_hosts

  yarn_test:
    parameters:
      directory:
        type: string
    steps:
      - run:
          command: |
            cd << parameters.directory >>
            yarn test:ci
      - store_test_results:
          path: build/tests

jobs:
  prepare_workspace:
    executor: "node"
    working_directory: *working_directory
    steps:
      - checkout
      - persist_to_workspace:
          root: '.'
          paths: '.'

  node_install_deps:
    executor: "node"
    steps:
      - attach_at_working_directory
      - node_deps_install
      - persist_to_workspace:
          root: *working_directory
          paths:
            - '.yarn'

  yarn_lint:
    executor: "node"
    parameters:
      directory:
        type: string
    working_directory: *working_directory
    steps:
      - attach_at_working_directory
      #- node_deps_install
      #- yarn_lint: // TODO: Enable after switching to ESLint
      #    directory: << parameters.directory >>

  yarn_test:
    executor: "node"
    parameters:
      directory:
        type: string
    working_directory: *working_directory
    steps:
      - attach_at_working_directory
      - node_deps_install
      - yarn_test:
          directory: << parameters.directory >>

  yarn_build:
    executor: "node"
    parameters:
      directory:
        type: string
    working_directory: *working_directory
    steps:
      - attach_at_working_directory
      - node_deps_install
      - run:
          command: |
            cd << parameters.directory >>
            yarn build
      - persist_to_workspace:
          root: *working_directory
          paths:
            - '*/*/dist'

  create_prerelease_versions:
    executor: "node"
    steps:
      - attach_at_working_directory
      - git_config
      - add_github_ssh_key
      - run:
          name: 'lerna_version_prerelease'
          working_directory: *working_directory
          command: 'yarn cache clean && yarn lerna version prerelease --force-publish --yes -m "chore(prerelease): %s [ci skip]"'

  publish_to_npm:
    executor: "node"
    steps:
      - attach_at_working_directory
      - git_config
      - add_github_ssh_key
      - git_pull_master
      - run:
          name: 'Publish react package'
          working_directory: *react_directory
          command: |
            echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
            yarn publish --tag next

  update_github_pages_storybook_version:
    executor: "node"
    steps:
      - attach_at_working_directory
      - git_config
      - add_github_ssh_key
      - run:
          name: 'Checkout gh-pages branch'
          working_directory: *working_directory
          command: 'git checkout -b gh-pages'
      - run:
          name: 'Build Storybook'
          working_directory: *storybook_directory
          command: 'yarn build'
      - run:
          name: 'Commit changes'
          working_directory: *working_directory
          command: 'git add . && git commit -m "Update Github Pages Storybook version [ci skip]"'
      - run:
          name: 'Push gh-pages branch'
          working_directory: *working_directory
          command: 'git push --force --set-upstream origin gh-pages'



workflows:
  version: 2

  build:
    jobs:
      - prepare_workspace
      - node_install_deps:
          requires:
            - prepare_workspace

      ### REACT
      - yarn_lint:
          name: react_yarn_lint
          directory: *react_directory
          requires:
            - node_install_deps
      - yarn_test:
          name: react_yarn_test
          directory: *react_directory
          requires:
            - node_install_deps
      - yarn_build:
          name: react_yarn_build
          directory: *react_directory
          requires:
            - node_install_deps

      ### STORYBOOK
      - yarn_lint:
          name: storybook_yarn_lint
          directory: *storybook_directory
          requires:
            - node_install_deps
      - yarn_build:
          name: storybook_yarn_build
          directory: *storybook_directory
          requires:
            - node_install_deps
            - react_yarn_build
      - update_github_pages_storybook_version:
          filters:
            branches:
              only:
                - master
          requires:
            - storybook_yarn_lint
            - storybook_yarn_build

      ### PRERELEASE
      - node_install_deps:
          filters:
            branches:
              only:
                - master
          name: root_node_install_deps
          requires:
            - prepare_workspace
      - create_prerelease_versions:
          filters:
            branches:
              only:
                - master
          requires:
            - root_node_install_deps
            - storybook_yarn_build
            - react_yarn_build
      - publish_to_npm:
          filters:
            branches:
              only:
                - master
          context: npm
          requires:
            - create_prerelease_versions
