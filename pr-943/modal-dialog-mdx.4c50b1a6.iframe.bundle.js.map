{"version":3,"file":"modal-dialog-mdx.4c50b1a6.iframe.bundle.js","mappings":";;;;AAyPA","sources":["webpack://@equisoft/design-elements-storybook/./stories/modal-dialog.stories.tsx"],"sourcesContent":["import { Button, ModalDialog, useModal } from '@equisoft/design-elements-react';\nimport { StoryObj } from '@storybook/react';\nimport { FunctionComponent, useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport { ShadowDomDecorator } from './utils/shadow-dom-decorator';\n\n// eslint-disable-next-line import/no-default-export\nexport default {\n    title: 'Components/Modal Dialog',\n    component: ModalDialog,\n};\n\ntype Story = StoryObj<typeof ModalDialog>;\n\nexport const Normal: Story = {\n    render: () => {\n        const { isModalOpen, closeModal, openModal } = useModal();\n        return (\n            <>\n                <Button label=\"Open Modal\" buttonType=\"primary\" onClick={openModal} />\n                <ModalDialog\n                    appElement=\"#storybook-root\"\n                    ariaDescribedby=\"story-description\"\n                    isOpen={isModalOpen}\n                    onRequestClose={closeModal}\n                    title=\"Heading 5\"\n                    subtitle=\"Subtitle 1\"\n                >\n                    <p style={{ margin: 0 }} id=\"story-description\">\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        Vivamus fringilla tellus nec auctor gravida.\n                    </p>\n                </ModalDialog>\n            </>\n        );\n    },\n};\n\nconst Paragraph: FunctionComponent<{}> = () => (\n    <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed cursus molestie dignissim.\n        Praesent nec vehicula erat. Duis sollicitudin maximus tristique. Donec eu erat congue, eleifend felis in,\n        suscipit nibh. Nunc luctus orci vel nunc sodales, iaculis ultricies libero posuere. Suspendisse vel turpis\n        lacus. Cras accumsan leo eu sem hendrerit, et rutrum nisl vehicula. Vivamus nec sapien ut nibh convallis\n        ullamcorper. Nulla fringilla non ante sed posuere. Integer tincidunt nisi sed augue eleifend dignissim. Donec\n        nec velit tellus. Nam nec lectus a ligula finibus tempus varius a felis. Ut lorem turpis, ultrices in vestibulum\n        at, elementum et nunc. Cras rutrum ultricies nisi a congue. Ut et aliquam mi.\n    </p>\n);\n\nexport const Scrollable: Story = {\n    render: () => {\n        const { isModalOpen, closeModal, openModal } = useModal();\n        return (\n            <>\n                <Button label=\"Open Modal\" buttonType=\"primary\" onClick={openModal} />\n                <ModalDialog\n                    appElement=\"#storybook-root\"\n                    ariaDescribedby=\"story-description\"\n                    isOpen={isModalOpen}\n                    onRequestClose={closeModal}\n                    title=\"Heading 5\"\n                    subtitle=\"Subtitle 1\"\n                >\n                    <div id=\"story-description\">\n                        {/* eslint-disable-next-line react/no-array-index-key */}\n                        {[...Array(10).keys()].map((_, i) => <Paragraph key={i} />)}\n                    </div>\n                </ModalDialog>\n            </>\n        );\n    },\n};\n\nexport const CustomButtonLabels: Story = {\n    render: () => {\n        const { isModalOpen, closeModal, openModal } = useModal();\n        return (\n            <>\n                <Button label=\"Open Modal\" buttonType=\"primary\" onClick={openModal} />\n                <ModalDialog\n                    appElement=\"#storybook-root\"\n                    ariaDescribedby=\"story-description\"\n                    isOpen={isModalOpen}\n                    onRequestClose={closeModal}\n                    confirmButton={{\n                        label: 'Custom Confirm',\n                    }}\n                    cancelButton={{\n                        label: 'Custom Cancel',\n                    }}\n                    title=\"Heading 5\"\n                    subtitle=\"Subtitle 1\"\n                >\n                    <p style={{ margin: 0 }} id=\"story-description\">\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus\n                        fringilla tellus nec auctor gravida.\n                    </p>\n                </ModalDialog>\n            </>\n        );\n    },\n};\n\nexport const WithTitleIcon: Story = {\n    render: () => {\n        const { isModalOpen, closeModal, openModal } = useModal();\n        return (\n            <>\n                <Button label=\"Open Modal\" buttonType=\"primary\" onClick={openModal} />\n                <ModalDialog\n                    appElement=\"#storybook-root\"\n                    ariaDescribedby=\"story-description\"\n                    isOpen={isModalOpen}\n                    onRequestClose={closeModal}\n                    title=\"With title icon\"\n                    titleIcon=\"warningFilled\"\n                >\n                    <p style={{ margin: 0 }} id=\"story-description\">\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus\n                        fringilla tellus nec auctor gravida.\n                    </p>\n                </ModalDialog>\n            </>\n        );\n    },\n};\n\nexport const WithoutCloseButton: Story = {\n    render: () => {\n        const { isModalOpen, closeModal, openModal } = useModal();\n        return (\n            <>\n                <Button label=\"Open Modal\" buttonType=\"primary\" onClick={openModal} />\n                <ModalDialog\n                    appElement=\"#storybook-root\"\n                    ariaDescribedby=\"story-description\"\n                    hasCloseButton={false}\n                    isOpen={isModalOpen}\n                    onRequestClose={closeModal}\n                    title=\"Without close button\"\n                >\n                    <p style={{ margin: 0 }} id=\"story-description\">\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus\n                        fringilla tellus nec auctor gravida.\n                    </p>\n                </ModalDialog>\n            </>\n        );\n    },\n};\n\nexport const ConfirmCallback: Story = {\n    render: () => {\n        const { isModalOpen, closeModal, openModal } = useModal();\n\n        function handleConfirm(): void {\n            console.info('confirmed');\n            closeModal();\n        }\n\n        return (\n            <>\n                <Button label=\"Open Modal\" buttonType=\"primary\" onClick={openModal} />\n                <ModalDialog\n                    appElement=\"#storybook-root\"\n                    ariaDescribedby=\"story-description\"\n                    isOpen={isModalOpen}\n                    confirmButton={{\n                        onConfirm: handleConfirm,\n                    }}\n                    onRequestClose={closeModal}\n                    title=\"Heading 5\"\n                    subtitle=\"Subtitle 1\"\n                >\n                    <p style={{ margin: 0 }} id=\"story-description\">\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus\n                        fringilla tellus nec auctor gravida.\n                    </p>\n                </ModalDialog>\n            </>\n        );\n    },\n};\n\nexport const CancelCallback: Story = {\n    render: () => {\n        const { isModalOpen, closeModal, openModal } = useModal();\n\n        function handleCancel(): void {\n            console.info('canceled');\n            closeModal();\n        }\n\n        return (\n            <>\n                <Button label=\"Open Modal\" buttonType=\"primary\" onClick={openModal} />\n                <ModalDialog\n                    appElement=\"#storybook-root\"\n                    ariaDescribedby=\"story-description\"\n                    isOpen={isModalOpen}\n                    cancelButton={{\n                        onCancel: handleCancel,\n                    }}\n                    onRequestClose={closeModal}\n                    title=\"Heading 5\"\n                    subtitle=\"Subtitle 1\"\n                >\n                    <p style={{ margin: 0 }} id=\"story-description\">\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus\n                        fringilla tellus nec auctor gravida.\n                    </p>\n                </ModalDialog>\n            </>\n        );\n    },\n};\n\nexport const CustomFooterContent: Story = {\n    render: () => {\n        const { isModalOpen, closeModal, openModal } = useModal();\n        return (\n            <>\n                <Button label=\"Open Modal\" buttonType=\"primary\" onClick={openModal} />\n                <ModalDialog\n                    appElement=\"#storybook-root\"\n                    ariaDescribedby=\"story-description\"\n                    isOpen={isModalOpen}\n                    onRequestClose={closeModal}\n                    title=\"Heading 5\"\n                    subtitle=\"Subtitle 1\"\n                    footerContent={<b>Custom Content</b>}\n                >\n                    <p style={{ margin: 0 }} id=\"story-description\">\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus\n                        fringilla tellus nec auctor gravida.\n                    </p>\n                </ModalDialog>\n            </>\n        );\n    },\n};\n\nconst AbsoluteDiv = styled.div`\n    left: -9999px;\n    position: absolute;\n    top: -9999px;\n`;\n\nexport const WithinShadowDOM: Story = {\n    decorators: [ShadowDomDecorator],\n    render: () => {\n        const { isModalOpen, closeModal, openModal } = useModal();\n        const [parentElement, setParentElement] = useState<HTMLDivElement | null>();\n        const ref = useCallback(setParentElement, [setParentElement]);\n\n        return (\n            <>\n                <AbsoluteDiv ref={ref} />\n\n                {parentElement && [\n                    <Button label=\"Open Modal\" buttonType=\"primary\" onClick={openModal} />,\n\n                    <ModalDialog\n                        appElement=\"#storybook-root\"\n                        ariaDescribedby=\"story-description\"\n                        isOpen={isModalOpen}\n                        onRequestClose={closeModal}\n                        parentSelector={() => parentElement}\n                        title=\"Heading 5\"\n                        subtitle=\"Subtitle 1\"\n                    >\n                        <p style={{ margin: 0 }} id=\"story-description\">\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus\n                            fringilla tellus nec auctor gravida.\n                        </p>\n                    </ModalDialog>,\n                ]}\n            </>\n        );\n    },\n};\n\nexport const InformationDialog: Story = {\n    render: () => {\n        const { isModalOpen, closeModal, openModal } = useModal();\n        return (\n            <>\n                <Button label=\"Open Modal\" buttonType=\"primary\" onClick={openModal} />\n                <ModalDialog\n                    appElement=\"#storybook-root\"\n                    ariaDescribedby=\"story-description\"\n                    isOpen={isModalOpen}\n                    onRequestClose={closeModal}\n                    title=\"Information Modal\"\n                    dialogType=\"information\"\n                    confirmButton={{\n                        label: 'Got it',\n                    }}\n                >\n                    <p style={{ margin: 0 }} id=\"story-description\">\n                        This modal has only one button. It is used to inform the user of something.\n                    </p>\n                </ModalDialog>\n            </>\n        );\n    },\n};\n\nexport const AlertDialog: Story = {\n    render: () => {\n        const { isModalOpen, closeModal, openModal } = useModal();\n        return (\n            <>\n                <Button label=\"Open Modal\" buttonType=\"destructive-primary\" onClick={openModal} />\n                <ModalDialog\n                    appElement=\"#storybook-root\"\n                    ariaDescribedby=\"story-description\"\n                    confirmButton={{\n                        label: 'Delete',\n                    }}\n                    isOpen={isModalOpen}\n                    onRequestClose={closeModal}\n                    title=\"Alert Modal\"\n                    dialogType=\"alert\"\n                >\n                    <p style={{ margin: 0 }} id=\"story-description\">\n                        This modal has a destructive button. It is used to alert the user of something.\n                    </p>\n                </ModalDialog>\n            </>\n        );\n    },\n};\n"],"names":[],"sourceRoot":""}