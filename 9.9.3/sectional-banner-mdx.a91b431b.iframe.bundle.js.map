{"version":3,"file":"sectional-banner-mdx.a91b431b.iframe.bundle.js","mappings":";;;;AA0BA","sources":["webpack://@equisoft/design-elements-storybook/./stories/sectional-banner.stories.tsx"],"sourcesContent":["import { Button, SectionalBanner } from '@equisoft/design-elements-react';\nimport { Meta, StoryObj } from '@storybook/react';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { decorateWith } from './utils/decorator';\n\nconst Container = styled.div`\n    > * + * {\n        margin-top: 1rem;\n    }\n`;\n\nconst meta: Meta<typeof SectionalBanner> = {\n    title: 'Components/Sectional Banner',\n    component: SectionalBanner,\n    decorators: [decorateWith(Container)],\n    argTypes: {\n        onButtonClicked: {\n            control: { disable: true },\n        },\n        onDismiss: {\n            control: { disable: true },\n        },\n    },\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof SectionalBanner>;\n\nexport const Neutral: Story = {\n    args: {\n        title: 'Neutral',\n        type: 'neutral',\n        buttonLabel: 'Click me',\n    },\n    render: (args) => {\n        const [dismissed, setDismissed] = useState<boolean>(false);\n\n        return !dismissed ? (\n            <SectionalBanner\n                {...args /* eslint-disable-line react/jsx-props-no-spreading */}\n                onDismiss={() => setDismissed(true)}\n            >\n                Here&apos;s a contextual notice with an icon and title.\n            </SectionalBanner>\n        ) : (\n            <Button buttonType=\"primary\" onClick={() => setDismissed(false)}>Show banner</Button>\n        );\n    },\n};\n\nexport const Informative: Story = {\n    args: {\n        title: 'Informative',\n        type: 'info',\n        buttonLabel: 'Click me',\n    },\n    render: (args) => {\n        const [dismissed, setDismissed] = useState<boolean>(false);\n\n        return !dismissed ? (\n            <SectionalBanner\n                {...args /* eslint-disable-line react/jsx-props-no-spreading */}\n                onDismiss={() => setDismissed(true)}\n            >\n                <p>Here&apos;s a contextual notice with an icon and title.</p>\n                <ul>\n                    <li>List item 1</li>\n                    <li>List item 2</li>\n                    <li>List item 3</li>\n                </ul>\n            </SectionalBanner>\n        ) : (\n            <Button buttonType=\"primary\" onClick={() => setDismissed(false)}>Show banner</Button>\n        );\n    },\n};\n\nexport const Success: Story = {\n    args: {\n        title: 'Success',\n        type: 'success',\n    },\n    render: (args) => {\n        const [dismissed, setDismissed] = useState<boolean>(false);\n\n        return !dismissed ? (\n            <SectionalBanner\n                {...args /* eslint-disable-line react/jsx-props-no-spreading */}\n                onDismiss={() => setDismissed(true)}\n            >\n                Here&apos;s a contextual notice with an icon and title.\n            </SectionalBanner>\n        ) : (\n            <Button buttonType=\"primary\" onClick={() => setDismissed(false)}>Show banner</Button>\n        );\n    },\n};\n\nexport const Warning: Story = {\n    args: {\n        title: 'Warning',\n        type: 'warning',\n    },\n    render: (args) => {\n        const [dismissed, setDismissed] = useState<boolean>(false);\n\n        return !dismissed ? (\n            <SectionalBanner\n                {...args /* eslint-disable-line react/jsx-props-no-spreading */}\n                onDismiss={() => setDismissed(true)}\n            >\n                Here&apos;s a contextual notice with an icon and title.\n            </SectionalBanner>\n        ) : (\n            <Button buttonType=\"primary\" onClick={() => setDismissed(false)}>Show banner</Button>\n        );\n    },\n};\n\nexport const Alert: Story = {\n    args: {\n        title: 'Alert',\n        type: 'alert',\n    },\n    render: (args) => {\n        const [dismissed, setDismissed] = useState<boolean>(false);\n\n        return !dismissed ? (\n            <SectionalBanner\n                {...args /* eslint-disable-line react/jsx-props-no-spreading */}\n                onDismiss={() => setDismissed(true)}\n            >\n                <p>Here&apos;s a contextual notice with an icon and title.</p>\n                <p>Some sub title</p>\n                <ul>\n                    <li>Some bullet points</li>\n                    <li>Some bullet points</li>\n                </ul>\n            </SectionalBanner>\n        ) : (\n            <Button buttonType=\"primary\" onClick={() => setDismissed(false)}>Show banner</Button>\n        );\n    },\n};\n\nexport const Discovery: Story = {\n    args: {\n        title: 'Discovery',\n        type: 'discovery',\n    },\n    render: (args) => {\n        const [dismissed, setDismissed] = useState<boolean>(false);\n\n        return !dismissed ? (\n            <SectionalBanner\n                {...args /* eslint-disable-line react/jsx-props-no-spreading */}\n                onDismiss={() => setDismissed(true)}\n            >\n                Here&apos;s a contextual notice with an icon and title.\n            </SectionalBanner>\n        ) : (\n            <Button buttonType=\"primary\" onClick={() => setDismissed(false)}>Show banner</Button>\n        );\n    },\n};\n"],"names":[],"sourceRoot":""}