"use strict";(self.webpackChunk_equisoft_design_elements_storybook=self.webpackChunk_equisoft_design_elements_storybook||[]).push([[5893],{"./stories/segmented-control.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,WithCallback:()=>WithCallback,WithIcon:()=>WithIcon,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../.yarn/__virtual__/@equisoft-design-elements-react-virtual-0c2f823c14/1/packages/react/dist/bundle.js"),_utils_parameters__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./stories/utils/parameters.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Segmented Control",component:_equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__.SegmentedControl,argTypes:{requireSelection:{control:"boolean",description:"When true, a button must always be selected",defaultValue:!1},onClick:{control:{ariaDisabled:!0}}}},Default={args:{buttonGroup:[{label:"Option 1",value:"option1"},{label:"Option 2",value:"option2"},{label:"Option 3",value:"option3"},{label:"Option 4",value:"option4"}],groupName:"Story1"}},WithIcon={args:{buttonGroup:[{value:"option1",icon:"alertCircle",ariaLabel:"Alert"},{label:"Option",value:"option2",icon:"alertCircle"},{label:"Option",value:"option3",icon:"alertCircle",ariaDisabled:!0},{label:"Option",value:"option4",defaultPressed:!0}],groupName:"Story1",requireSelection:!0}},WithCallback={parameters:_utils_parameters__WEBPACK_IMPORTED_MODULE_1__.A,args:{buttonGroup:[{label:"Option 1",value:"option1"},{label:"Option 2",value:"option2",defaultPressed:!0},{label:"Option 3",value:"option3"},{label:"Option 4",value:"option4"}],groupName:"Story2",onClick:event=>console.info(`Toggled button value: ${event.currentTarget.value}`)}},__namedExportsOrder=["Default","WithIcon","WithCallback"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    buttonGroup: [{\n      label: 'Option 1',\n      value: 'option1'\n    }, {\n      label: 'Option 2',\n      value: 'option2'\n    }, {\n      label: 'Option 3',\n      value: 'option3'\n    }, {\n      label: 'Option 4',\n      value: 'option4'\n    }],\n    groupName: 'Story1'\n  }\n}",...Default.parameters?.docs?.source}}},WithIcon.parameters={...WithIcon.parameters,docs:{...WithIcon.parameters?.docs,source:{originalSource:"{\n  args: {\n    buttonGroup: [{\n      value: 'option1',\n      icon: 'alertCircle',\n      ariaLabel: 'Alert'\n    }, {\n      label: 'Option',\n      value: 'option2',\n      icon: 'alertCircle'\n    }, {\n      label: 'Option',\n      value: 'option3',\n      icon: 'alertCircle',\n      ariaDisabled: true\n    }, {\n      label: 'Option',\n      value: 'option4',\n      defaultPressed: true\n    }],\n    groupName: 'Story1',\n    requireSelection: true\n  }\n}",...WithIcon.parameters?.docs?.source}}},WithCallback.parameters={...WithCallback.parameters,docs:{...WithCallback.parameters?.docs,source:{originalSource:"{\n  parameters: rawCodeParameters,\n  args: {\n    buttonGroup: [{\n      label: 'Option 1',\n      value: 'option1'\n    }, {\n      label: 'Option 2',\n      value: 'option2',\n      defaultPressed: true\n    }, {\n      label: 'Option 3',\n      value: 'option3'\n    }, {\n      label: 'Option 4',\n      value: 'option4'\n    }],\n    groupName: 'Story2',\n    onClick: (event: MouseEvent<HTMLButtonElement>) => console.info(`Toggled button value: ${event.currentTarget.value}`)\n  }\n}",...WithCallback.parameters?.docs?.source}}}},"./stories/utils/parameters.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>rawCodeParameters});const rawCodeParameters={docs:{source:{type:"code"}}}}}]);