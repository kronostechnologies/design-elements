{"version":3,"file":"listbox-stories.6c963460.iframe.bundle.js","mappings":";;AA0DA","sources":["webpack://@equisoft/design-elements-storybook/./stories/listbox.stories.tsx"],"sourcesContent":["import { Button, Listbox, ListboxOption } from '@equisoft/design-elements-react';\nimport { StoryFn as Story } from '@storybook/react';\nimport { useState } from 'react';\nimport styled from 'styled-components';\n\nexport default {\n    title: 'Components/Core/Listbox (core)',\n    component: Listbox,\n    tags: ['autodocs'],\n};\n\nconst options = [\n    { label: 'Option A', value: 'optionA' },\n    { label: 'Option B', value: 'optionB' },\n    { label: 'Option C', value: 'optionC' },\n    { label: 'Option D', value: 'optionD', disabled: true },\n    { label: 'Option E', value: 'optionE' },\n    { label: 'Option F', value: 'optionF' },\n    { label: 'Option G', value: 'optionG' },\n];\n\nexport const Normal: Story = () => (\n    <Listbox options={options} />\n);\n\nexport const WithDefaultValue: Story = () => (\n    <Listbox defaultValue=\"optionF\" options={options} />\n);\n\nexport const WithCaptions: Story = () => {\n    const optionsWithCaptions = [\n        { label: 'Option A', value: 'optionA', caption: 'The first one' },\n        { label: 'Option B', value: 'optionB', caption: 'Why not this one?' },\n        { label: 'Option C', value: 'optionC', caption: 'This one is also an option' },\n    ];\n\n    return (\n        <Listbox options={optionsWithCaptions} />\n    );\n};\n\nexport const WithDisabledOptions: Story = () => {\n    const disabledOptions = [\n        { label: 'Option A', value: 'optionA' },\n        { label: 'Option B', value: 'optionB', disabled: true },\n        { label: 'Option C', value: 'optionC', disabled: true },\n        { label: 'Option D', value: 'optionD' },\n    ];\n\n    return (\n        <Listbox options={disabledOptions} />\n    );\n};\n\nconst StyledButton = styled(Button)`\n    margin-top: 1rem;\n`;\n\nexport const WithControlledValue: Story = () => {\n    const [value, setValue] = useState<string | undefined>(undefined);\n\n    function handleChange(option: ListboxOption): void {\n        setValue(option.value);\n    }\n\n    return (\n        <>\n            <Listbox options={options} onChange={handleChange} value={value} />\n            <StyledButton buttonType=\"primary\" onClick={() => setValue('optionC')}>\n                Set value to Option C\n            </StyledButton>\n        </>\n    );\n};\n\nexport const WithCallbacks: Story = () => (\n    <Listbox\n        options={options}\n        onFocusChange={(option) => console.info('onFocusChange', option)}\n        onChange={(option) => console.info('onChange', option)}\n    />\n);\n\nexport const Multiselect: Story = () => (\n    <Listbox\n        defaultValue={['optionA', 'optionC']}\n        multiselect\n        options={options}\n    />\n);\n"],"names":[],"sourceRoot":""}