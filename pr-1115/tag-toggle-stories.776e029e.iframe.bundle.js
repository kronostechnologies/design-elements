"use strict";(self.webpackChunk_equisoft_design_elements_storybook=self.webpackChunk_equisoft_design_elements_storybook||[]).push([[4702],{"./stories/tag-toggle.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,WithRef:()=>WithRef,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../react/dist/bundle.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/index.js"),_utils_parameters__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./stories/utils/parameters.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const ToggleTagMeta={component:_equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__.ToggleTag,title:"Components/Tag (Toggle)",args:{value:{label:"Toggle Tag"},size:"medium",iconName:void 0,selected:void 0,onClick:tag=>console.info(`Clicked on ${tag.label}`)},argTypes:{size:{control:{type:"select"},defaultValue:"medium"},value:{control:{type:"object"}},iconName:{control:{type:"select"}},selected:{control:{type:"boolean"}}},render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__.ToggleTag,{...args,value:{label:args.value?.label||"Toggle Tag"}})},__WEBPACK_DEFAULT_EXPORT__=ToggleTagMeta,Default={...ToggleTagMeta},WithRef=()=>{const ref=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_equisoft_design_elements_react__WEBPACK_IMPORTED_MODULE_0__.ToggleTag,{ref,iconName:"copy",size:"small",value:{label:"Tag 1"}},"small")};WithRef.parameters=_utils_parameters__WEBPACK_IMPORTED_MODULE_2__.A;const __namedExportsOrder=["Default","WithRef"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  ...ToggleTagMeta\n}",...Default.parameters?.docs?.source}}},WithRef.parameters={...WithRef.parameters,docs:{...WithRef.parameters?.docs,source:{originalSource:'() => {\n  const ref = useRef(null);\n  return <ToggleTag ref={ref} key="small" iconName="copy" size="small" value={{\n    label: \'Tag 1\'\n  }} />;\n}',...WithRef.parameters?.docs?.source}}}},"./stories/utils/parameters.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>rawCodeParameters});const rawCodeParameters={docs:{source:{type:"code"}}}}}]);